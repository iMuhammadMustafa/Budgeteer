  console.log
    Initializing storage mode: cloud

      at log (src/providers/DemoModeGlobal.ts:62:13)

  console.log
    Storage mode initialized successfully: cloud

      at log (src/providers/DemoModeGlobal.ts:65:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Starting validation for local storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for local mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for local mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for local: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    ≡ƒÜÇ Starting Automated Storage Validation Test Suite...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:81:13)

  console.log
    Configuration: { modes: [ 'demo', 'local' ], outputFormat: 'console' }

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:82:13)

  console.log
    
    ≡ƒôï Testing DEMO mode...

      at log (src/services/storage/validation/AutomatedTestSuite.ts:108:15)
          at _loop.next (<anonymous>)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)
          at _loop.next (<anonymous>)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)
          at _loop.next (<anonymous>)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Γ¥î DEMO mode failed some tests

      at log (src/services/storage/validation/AutomatedTestSuite.ts:147:19)
          at _loop.next (<anonymous>)

  console.log
    
    ≡ƒôï Testing LOCAL mode...

      at log (src/services/storage/validation/AutomatedTestSuite.ts:108:15)
          at _loop.next (<anonymous>)

  console.log
    Starting validation for local storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)
          at _loop.next (<anonymous>)

  console.log
    Validation completed for local mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for local mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)
          at _loop.next (<anonymous>)

  console.log
    Interface compliance test completed for local: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Γ¥î LOCAL mode failed some tests

      at log (src/services/storage/validation/AutomatedTestSuite.ts:147:19)
          at _loop.next (<anonymous>)

  console.log
    
    ≡ƒöì Performing cross-mode comparison...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:157:13)

  console.log
    
    ≡ƒÆí Generating recommendations...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:161:13)

  console.log
    
    ≡ƒôè TEST SUITE SUMMARY

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:365:13)

  console.log
    ==================================================

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:366:13)

  console.log
    Total Modes Tested: 2

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:367:13)

  console.log
    Passed Modes: 0

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:368:13)

  console.log
    Failed Modes: 2

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:369:13)

  console.log
    Total Tests: 88

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:370:13)

  console.log
    Passed Tests: 82

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:371:13)

  console.log
    Failed Tests: 4

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:372:13)

  console.log
    Skipped Tests: 2

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:373:13)

  console.log
    Success Rate: 93.2%

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:376:13)

  console.log
    
    ≡ƒÆí RECOMMENDATIONS

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:389:15)

  console.log
    --------------------

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:390:15)

  console.log
    ΓÇó 2 storage mode(s) failed tests. Review the detailed reports to identify and fix issues.

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:392:17)

  console.log
    ΓÇó Significant performance differences detected between storage modes. Consider optimizing slower implementations.

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:392:17)

  console.log
    
    ≡ƒÄë Test suite completed!

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:167:13)

  console.log
    ≡ƒÜÇ Starting Automated Storage Validation Test Suite...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:81:13)

  console.log
    Configuration: { modes: [ 'demo', 'local' ], outputFormat: 'json' }

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:82:13)

  console.log
    
    ≡ƒôï Testing DEMO mode...

      at log (src/services/storage/validation/AutomatedTestSuite.ts:108:15)
          at _loop.next (<anonymous>)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)
          at _loop.next (<anonymous>)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)
          at _loop.next (<anonymous>)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Γ¥î DEMO mode failed some tests

      at log (src/services/storage/validation/AutomatedTestSuite.ts:147:19)
          at _loop.next (<anonymous>)

  console.log
    
    ≡ƒôï Testing LOCAL mode...

      at log (src/services/storage/validation/AutomatedTestSuite.ts:108:15)
          at _loop.next (<anonymous>)

  console.log
    Starting validation for local storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)
          at _loop.next (<anonymous>)

  console.log
    Validation completed for local mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for local mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)
          at _loop.next (<anonymous>)

  console.log
    Interface compliance test completed for local: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Γ¥î LOCAL mode failed some tests

      at log (src/services/storage/validation/AutomatedTestSuite.ts:147:19)
          at _loop.next (<anonymous>)

  console.log
    
    ≡ƒöì Performing cross-mode comparison...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:157:13)

  console.log
    
    ≡ƒÆí Generating recommendations...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:161:13)

  console.log
    
    ≡ƒôä JSON Report:

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:350:17)

  console.log
    {
      "timestamp": "2025-08-14T23:06:38.798Z",
      "config": {
        "modes": [
          "demo",
          "local"
        ],
        "outputFormat": "json"
      },
      "summary": {
        "totalModes": 2,
        "passedModes": 0,
        "failedModes": 2,
        "totalTests": 88,
        "passedTests": 82,
        "failedTests": 4,
        "skippedTests": 2
      },
      "validationReports": [
        {
          "mode": "demo",
          "timestamp": "2025-08-14T23:06:38.801Z",
          "summary": {
            "totalTests": 44,
            "passed": 41,
            "failed": 2,
            "skipped": 1
          },
          "results": [
            {
              "testName": "Create accounts",
              "entityType": "accounts",
              "operation": "create",
              "status": "passed",
              "duration": 26,
              "details": "Successfully created accounts with ID: new-acc"
            },
            {
              "testName": "Read All accounts",
              "entityType": "accounts",
              "operation": "read",
              "status": "passed",
              "duration": 15,
              "details": "Successfully retrieved 2 accounts records"
            },
            {
              "testName": "Update accounts",
              "entityType": "accounts",
              "operation": "update",
              "status": "passed",
              "duration": 63,
              "details": "Successfully updated accounts with ID: acc-1"
            },
            {
              "testName": "Delete accounts",
              "entityType": "accounts",
              "operation": "delete",
              "status": "passed",
              "duration": 31,
              "details": "Successfully deleted accounts with ID: acc-1"
            },
            {
              "testName": "Interface Compliance - accounts",
              "entityType": "accounts",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 9 required methods are present"
            },
            {
              "testName": "Referential Integrity - accounts",
              "entityType": "accounts",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create accountCategories",
              "entityType": "accountCategories",
              "operation": "create",
              "status": "passed",
              "duration": 31,
              "details": "Successfully created accountCategories with ID: new-cat"
            },
            {
              "testName": "Read All accountCategories",
              "entityType": "accountCategories",
              "operation": "read",
              "status": "passed",
              "duration": 30,
              "details": "Successfully retrieved 2 accountCategories records"
            },
            {
              "testName": "Update accountCategories",
              "entityType": "accountCategories",
              "operation": "update",
              "status": "passed",
              "duration": 63,
              "details": "Successfully updated accountCategories with ID: cat-1"
            },
            {
              "testName": "Delete accountCategories",
              "entityType": "accountCategories",
              "operation": "delete",
              "status": "passed",
              "duration": 63,
              "details": "Successfully deleted accountCategories with ID: cat-1"
            },
            {
              "testName": "Interface Compliance - accountCategories",
              "entityType": "accountCategories",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 6 required methods are present"
            },
            {
              "testName": "Create transactions",
              "entityType": "transactions",
              "operation": "create",
              "status": "passed",
              "duration": 47,
              "details": "Successfully created transactions with ID: new-tr"
            },
            {
              "testName": "Read All transactions",
              "entityType": "transactions",
              "operation": "read",
              "status": "passed",
              "duration": 31,
              "details": "Successfully retrieved 1 transactions records"
            },
            {
              "testName": "Update transactions",
              "entityType": "transactions",
              "operation": "update",
              "status": "passed",
              "duration": 46,
              "details": "Successfully updated transactions with ID: tr-1"
            },
            {
              "testName": "Delete transactions",
              "entityType": "transactions",
              "operation": "delete",
              "status": "passed",
              "duration": 47,
              "details": "Successfully deleted transactions with ID: tr-1"
            },
            {
              "testName": "Interface Compliance - transactions",
              "entityType": "transactions",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 13 required methods are present"
            },
            {
              "testName": "Referential Integrity - transactions",
              "entityType": "transactions",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create transactionCategories",
              "entityType": "transactionCategories",
              "operation": "create",
              "status": "passed",
              "duration": 30,
              "details": "Successfully created transactionCategories with ID: new-tcat"
            },
            {
              "testName": "Read All transactionCategories",
              "entityType": "transactionCategories",
              "operation": "read",
              "status": "passed",
              "duration": 32,
              "details": "Successfully retrieved 1 transactionCategories records"
            },
            {
              "testName": "Update transactionCategories",
              "entityType": "transactionCategories",
              "operation": "update",
              "status": "passed",
              "duration": 32,
              "details": "Successfully updated transactionCategories with ID: tcat-1"
            },
            {
              "testName": "Delete transactionCategories",
              "entityType": "transactionCategories",
              "operation": "delete",
              "status": "passed",
              "duration": 64,
              "details": "Successfully deleted transactionCategories with ID: tcat-1"
            },
            {
              "testName": "Interface Compliance - transactionCategories",
              "entityType": "transactionCategories",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 6 required methods are present"
            },
            {
              "testName": "Referential Integrity - transactionCategories",
              "entityType": "transactionCategories",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create transactionGroups",
              "entityType": "transactionGroups",
              "operation": "create",
              "status": "passed",
              "duration": 15,
              "details": "Successfully created transactionGroups with ID: new-tg"
            },
            {
              "testName": "Read All transactionGroups",
              "entityType": "transactionGroups",
              "operation": "read",
              "status": "passed",
              "duration": 31,
              "details": "Successfully retrieved 1 transactionGroups records"
            },
            {
              "testName": "Update transactionGroups",
              "entityType": "transactionGroups",
              "operation": "update",
              "status": "passed",
              "duration": 61,
              "details": "Successfully updated transactionGroups with ID: tg-1"
            },
            {
              "testName": "Delete transactionGroups",
              "entityType": "transactionGroups",
              "operation": "delete",
              "status": "passed",
              "duration": 63,
              "details": "Successfully deleted transactionGroups with ID: tg-1"
            },
            {
              "testName": "Interface Compliance - transactionGroups",
              "entityType": "transactionGroups",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 6 required methods are present"
            },
            {
              "testName": "Create configurations",
              "entityType": "configurations",
              "operation": "create",
              "status": "passed",
              "duration": 16,
              "details": "Successfully created configurations with ID: new-conf"
            },
            {
              "testName": "Read All configurations",
              "entityType": "configurations",
              "operation": "read",
              "status": "passed",
              "duration": 31,
              "details": "Successfully retrieved 1 configurations records"
            },
            {
              "testName": "Update configurations",
              "entityType": "configurations",
              "operation": "update",
              "status": "passed",
              "duration": 62,
              "details": "Successfully updated configurations with ID: conf-1"
            },
            {
              "testName": "Delete configurations",
              "entityType": "configurations",
              "operation": "delete",
              "status": "passed",
              "duration": 62,
              "details": "Successfully deleted configurations with ID: conf-1"
            },
            {
              "testName": "Interface Compliance - configurations",
              "entityType": "configurations",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 7 required methods are present"
            },
            {
              "testName": "Create recurrings",
              "entityType": "recurrings",
              "operation": "create",
              "status": "passed",
              "duration": 31,
              "details": "Successfully created recurrings with ID: new-rec"
            },
            {
              "testName": "Read All recurrings",
              "entityType": "recurrings",
              "operation": "read",
              "status": "passed",
              "duration": 31,
              "details": "Successfully retrieved 1 recurrings records"
            },
            {
              "testName": "Update recurrings",
              "entityType": "recurrings",
              "operation": "update",
              "status": "passed",
              "duration": 47,
              "details": "Successfully updated recurrings with ID: rec-1"
            },
            {
              "testName": "Delete recurrings",
              "entityType": "recurrings",
              "operation": "delete",
              "status": "passed",
              "duration": 63,
              "details": "Successfully deleted recurrings with ID: rec-1"
            },
            {
              "testName": "Interface Compliance - recurrings",
              "entityType": "recurrings",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 5 required methods are present"
            },
            {
              "testName": "Referential Integrity - recurrings",
              "entityType": "recurrings",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create stats",
              "entityType": "stats",
              "operation": "create",
              "status": "failed",
              "duration": 0,
              "error": {}
            },
            {
              "testName": "Read All stats",
              "entityType": "stats",
              "operation": "read",
              "status": "passed",
              "duration": 15,
              "details": "Successfully retrieved 1 stats records"
            },
            {
              "testName": "Update stats",
              "entityType": "stats",
              "operation": "update",
              "status": "failed",
              "duration": 0,
              "error": {}
            },
            {
              "testName": "Delete stats",
              "entityType": "stats",
              "operation": "delete",
              "status": "skipped",
              "duration": 0,
              "details": "Stats entity does not support delete operations"
            },
            {
              "testName": "Interface Compliance - stats",
              "entityType": "stats",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 5 required methods are present"
            }
          ],
          "errors": [
            {
              "testName": "Create stats",
              "entityType": "stats",
              "error": {},
              "context": {
                "operation": "create",
                "testData": {}
              }
            },
            {
              "testName": "Update stats",
              "entityType": "stats",
              "error": {},
              "context": {
                "operation": "update",
                "updateData": {}
              }
            }
          ]
        },
        {
          "mode": "local",
          "timestamp": "2025-08-14T23:06:39.986Z",
          "summary": {
            "totalTests": 44,
            "passed": 41,
            "failed": 2,
            "skipped": 1
          },
          "results": [
            {
              "testName": "Create accounts",
              "entityType": "accounts",
              "operation": "create",
              "status": "passed",
              "duration": 76,
              "details": "Successfully created accounts with ID: new-acc"
            },
            {
              "testName": "Read All accounts",
              "entityType": "accounts",
              "operation": "read",
              "status": "passed",
              "duration": 76,
              "details": "Successfully retrieved 2 accounts records"
            },
            {
              "testName": "Update accounts",
              "entityType": "accounts",
              "operation": "update",
              "status": "passed",
              "duration": 142,
              "details": "Successfully updated accounts with ID: acc-1"
            },
            {
              "testName": "Delete accounts",
              "entityType": "accounts",
              "operation": "delete",
              "status": "passed",
              "duration": 124,
              "details": "Successfully deleted accounts with ID: acc-1"
            },
            {
              "testName": "Interface Compliance - accounts",
              "entityType": "accounts",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 9 required methods are present"
            },
            {
              "testName": "Referential Integrity - accounts",
              "entityType": "accounts",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create accountCategories",
              "entityType": "accountCategories",
              "operation": "create",
              "status": "passed",
              "duration": 79,
              "details": "Successfully created accountCategories with ID: new-cat"
            },
            {
              "testName": "Read All accountCategories",
              "entityType": "accountCategories",
              "operation": "read",
              "status": "passed",
              "duration": 63,
              "details": "Successfully retrieved 2 accountCategories records"
            },
            {
              "testName": "Update accountCategories",
              "entityType": "accountCategories",
              "operation": "update",
              "status": "passed",
              "duration": 122,
              "details": "Successfully updated accountCategories with ID: cat-1"
            },
            {
              "testName": "Delete accountCategories",
              "entityType": "accountCategories",
              "operation": "delete",
              "status": "passed",
              "duration": 125,
              "details": "Successfully deleted accountCategories with ID: cat-1"
            },
            {
              "testName": "Interface Compliance - accountCategories",
              "entityType": "accountCategories",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 6 required methods are present"
            },
            {
              "testName": "Create transactions",
              "entityType": "transactions",
              "operation": "create",
              "status": "passed",
              "duration": 76,
              "details": "Successfully created transactions with ID: new-tr"
            },
            {
              "testName": "Read All transactions",
              "entityType": "transactions",
              "operation": "read",
              "status": "passed",
              "duration": 78,
              "details": "Successfully retrieved 1 transactions records"
            },
            {
              "testName": "Update transactions",
              "entityType": "transactions",
              "operation": "update",
              "status": "passed",
              "duration": 126,
              "details": "Successfully updated transactions with ID: tr-1"
            },
            {
              "testName": "Delete transactions",
              "entityType": "transactions",
              "operation": "delete",
              "status": "passed",
              "duration": 123,
              "details": "Successfully deleted transactions with ID: tr-1"
            },
            {
              "testName": "Interface Compliance - transactions",
              "entityType": "transactions",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 13 required methods are present"
            },
            {
              "testName": "Referential Integrity - transactions",
              "entityType": "transactions",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create transactionCategories",
              "entityType": "transactionCategories",
              "operation": "create",
              "status": "passed",
              "duration": 62,
              "details": "Successfully created transactionCategories with ID: new-tcat"
            },
            {
              "testName": "Read All transactionCategories",
              "entityType": "transactionCategories",
              "operation": "read",
              "status": "passed",
              "duration": 63,
              "details": "Successfully retrieved 1 transactionCategories records"
            },
            {
              "testName": "Update transactionCategories",
              "entityType": "transactionCategories",
              "operation": "update",
              "status": "passed",
              "duration": 139,
              "details": "Successfully updated transactionCategories with ID: tcat-1"
            },
            {
              "testName": "Delete transactionCategories",
              "entityType": "transactionCategories",
              "operation": "delete",
              "status": "passed",
              "duration": 142,
              "details": "Successfully deleted transactionCategories with ID: tcat-1"
            },
            {
              "testName": "Interface Compliance - transactionCategories",
              "entityType": "transactionCategories",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 6 required methods are present"
            },
            {
              "testName": "Referential Integrity - transactionCategories",
              "entityType": "transactionCategories",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create transactionGroups",
              "entityType": "transactionGroups",
              "operation": "create",
              "status": "passed",
              "duration": 78,
              "details": "Successfully created transactionGroups with ID: new-tg"
            },
            {
              "testName": "Read All transactionGroups",
              "entityType": "transactionGroups",
              "operation": "read",
              "status": "passed",
              "duration": 78,
              "details": "Successfully retrieved 1 transactionGroups records"
            },
            {
              "testName": "Update transactionGroups",
              "entityType": "transactionGroups",
              "operation": "update",
              "status": "passed",
              "duration": 139,
              "details": "Successfully updated transactionGroups with ID: tg-1"
            },
            {
              "testName": "Delete transactionGroups",
              "entityType": "transactionGroups",
              "operation": "delete",
              "status": "passed",
              "duration": 141,
              "details": "Successfully deleted transactionGroups with ID: tg-1"
            },
            {
              "testName": "Interface Compliance - transactionGroups",
              "entityType": "transactionGroups",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 6 required methods are present"
            },
            {
              "testName": "Create configurations",
              "entityType": "configurations",
              "operation": "create",
              "status": "passed",
              "duration": 63,
              "details": "Successfully created configurations with ID: new-conf"
            },
            {
              "testName": "Read All configurations",
              "entityType": "configurations",
              "operation": "read",
              "status": "passed",
              "duration": 62,
              "details": "Successfully retrieved 1 configurations records"
            },
            {
              "testName": "Update configurations",
              "entityType": "configurations",
              "operation": "update",
              "status": "passed",
              "duration": 139,
              "details": "Successfully updated configurations with ID: conf-1"
            },
            {
              "testName": "Delete configurations",
              "entityType": "configurations",
              "operation": "delete",
              "status": "passed",
              "duration": 141,
              "details": "Successfully deleted configurations with ID: conf-1"
            },
            {
              "testName": "Interface Compliance - configurations",
              "entityType": "configurations",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 7 required methods are present"
            },
            {
              "testName": "Create recurrings",
              "entityType": "recurrings",
              "operation": "create",
              "status": "passed",
              "duration": 62,
              "details": "Successfully created recurrings with ID: new-rec"
            },
            {
              "testName": "Read All recurrings",
              "entityType": "recurrings",
              "operation": "read",
              "status": "passed",
              "duration": 61,
              "details": "Successfully retrieved 1 recurrings records"
            },
            {
              "testName": "Update recurrings",
              "entityType": "recurrings",
              "operation": "update",
              "status": "passed",
              "duration": 141,
              "details": "Successfully updated recurrings with ID: rec-1"
            },
            {
              "testName": "Delete recurrings",
              "entityType": "recurrings",
              "operation": "delete",
              "status": "passed",
              "duration": 138,
              "details": "Successfully deleted recurrings with ID: rec-1"
            },
            {
              "testName": "Interface Compliance - recurrings",
              "entityType": "recurrings",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 5 required methods are present"
            },
            {
              "testName": "Referential Integrity - recurrings",
              "entityType": "recurrings",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create stats",
              "entityType": "stats",
              "operation": "create",
              "status": "failed",
              "duration": 0,
              "error": {}
            },
            {
              "testName": "Read All stats",
              "entityType": "stats",
              "operation": "read",
              "status": "passed",
              "duration": 79,
              "details": "Successfully retrieved 1 stats records"
            },
            {
              "testName": "Update stats",
              "entityType": "stats",
              "operation": "update",
              "status": "failed",
              "duration": 0,
              "error": {}
            },
            {
              "testName": "Delete stats",
              "entityType": "stats",
              "operation": "delete",
              "status": "skipped",
              "duration": 0,
              "details": "Stats entity does not support delete operations"
            },
            {
              "testName": "Interface Compliance - stats",
              "entityType": "stats",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 5 required methods are present"
            }
          ],
          "errors": [
            {
              "testName": "Create stats",
              "entityType": "stats",
              "error": {},
              "context": {
                "operation": "create",
                "testData": {}
              }
            },
            {
              "testName": "Update stats",
              "entityType": "stats",
              "error": {},
              "context": {
                "operation": "update",
                "updateData": {}
              }
            }
          ]
        }
      ],
      "complianceReports": [
        {
          "mode": "demo",
          "timestamp": "2025-08-14T23:06:39.984Z",
          "summary": {
            "totalInterfaces": 8,
            "compliantInterfaces": 8,
            "nonCompliantInterfaces": 0
          },
          "results": [
            {
              "entityType": "accounts",
              "isCompliant": true,
              "requiredMethods": [
                "getAllAccounts",
                "getAccountById",
                "createAccount",
                "updateAccount",
                "deleteAccount",
                "restoreAccount",
                "updateAccountBalance",
                "getAccountOpenedTransaction",
                "getTotalAccountBalance"
              ],
              "implementedMethods": [
                "getAllAccounts",
                "getAccountById",
                "createAccount",
                "updateAccount",
                "deleteAccount",
                "restoreAccount",
                "updateAccountBalance",
                "getAccountOpenedTransaction",
                "getTotalAccountBalance"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "accountCategories",
              "isCompliant": true,
              "requiredMethods": [
                "getAllAccountCategories",
                "getAccountCategoryById",
                "createAccountCategory",
                "updateAccountCategory",
                "deleteAccountCategory",
                "restoreAccountCategory"
              ],
              "implementedMethods": [
                "getAllAccountCategories",
                "getAccountCategoryById",
                "createAccountCategory",
                "updateAccountCategory",
                "deleteAccountCategory",
                "restoreAccountCategory"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "transactions",
              "isCompliant": true,
              "requiredMethods": [
                "getAllTransactions",
                "getTransactions",
                "getTransactionFullyById",
                "getTransactionById",
                "getTransactionByTransferId",
                "getTransactionsByName",
                "createTransaction",
                "createTransactions",
                "createMultipleTransactions",
                "updateTransaction",
                "updateTransferTransaction",
                "deleteTransaction",
                "restoreTransaction"
              ],
              "implementedMethods": [
                "getAllTransactions",
                "getTransactions",
                "getTransactionFullyById",
                "getTransactionById",
                "getTransactionByTransferId",
                "getTransactionsByName",
                "createTransaction",
                "createTransactions",
                "createMultipleTransactions",
                "updateTransaction",
                "updateTransferTransaction",
                "deleteTransaction",
                "restoreTransaction"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "transactionCategories",
              "isCompliant": true,
              "requiredMethods": [
                "getAllTransactionCategories",
                "getTransactionCategoryById",
                "createTransactionCategory",
                "updateTransactionCategory",
                "deleteTransactionCategory",
                "restoreTransactionCategory"
              ],
              "implementedMethods": [
                "getAllTransactionCategories",
                "getTransactionCategoryById",
                "createTransactionCategory",
                "updateTransactionCategory",
                "deleteTransactionCategory",
                "restoreTransactionCategory"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "transactionGroups",
              "isCompliant": true,
              "requiredMethods": [
                "getAllTransactionGroups",
                "getTransactionGroupById",
                "createTransactionGroup",
                "updateTransactionGroup",
                "deleteTransactionGroup",
                "restoreTransactionGroup"
              ],
              "implementedMethods": [
                "getAllTransactionGroups",
                "getTransactionGroupById",
                "createTransactionGroup",
                "updateTransactionGroup",
                "deleteTransactionGroup",
                "restoreTransactionGroup"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "configurations",
              "isCompliant": true,
              "requiredMethods": [
                "getAllConfigurations",
                "getConfigurationById",
                "getConfiguration",
                "createConfiguration",
                "updateConfiguration",
                "deleteConfiguration",
                "restoreConfiguration"
              ],
              "implementedMethods": [
                "getAllConfigurations",
                "getConfigurationById",
                "getConfiguration",
                "createConfiguration",
                "updateConfiguration",
                "deleteConfiguration",
                "restoreConfiguration"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "recurrings",
              "isCompliant": true,
              "requiredMethods": [
                "listRecurrings",
                "getRecurringById",
                "createRecurring",
                "updateRecurring",
                "deleteRecurring"
              ],
              "implementedMethods": [
                "listRecurrings",
                "getRecurringById",
                "createRecurring",
                "updateRecurring",
                "deleteRecurring"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "stats",
              "isCompliant": true,
              "requiredMethods": [
                "getStatsDailyTransactions",
                "getStatsMonthlyTransactionsTypes",
                "getStatsMonthlyCategoriesTransactions",
                "getStatsMonthlyAccountsTransactions",
                "getStatsNetWorthGrowth"
              ],
              "implementedMethods": [
                "getStatsDailyTransactions",
                "getStatsMonthlyTransactionsTypes",
                "getStatsMonthlyCategoriesTransactions",
                "getStatsMonthlyAccountsTransactions",
                "getStatsNetWorthGrowth"
              ],
              "missingMethods": [],
              "extraMethods": []
            }
          ],
          "violations": []
        },
        {
          "mode": "local",
          "timestamp": "2025-08-14T23:06:42.929Z",
          "summary": {
            "totalInterfaces": 8,
            "compliantInterfaces": 8,
            "nonCompliantInterfaces": 0
          },
          "results": [
            {
              "entityType": "accounts",
              "isCompliant": true,
              "requiredMethods": [
                "getAllAccounts",
                "getAccountById",
                "createAccount",
                "updateAccount",
                "deleteAccount",
                "restoreAccount",
                "updateAccountBalance",
                "getAccountOpenedTransaction",
                "getTotalAccountBalance"
              ],
              "implementedMethods": [
                "getAllAccounts",
                "getAccountById",
                "createAccount",
                "updateAccount",
                "deleteAccount",
                "restoreAccount",
                "updateAccountBalance",
                "getAccountOpenedTransaction",
                "getTotalAccountBalance"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "accountCategories",
              "isCompliant": true,
              "requiredMethods": [
                "getAllAccountCategories",
                "getAccountCategoryById",
                "createAccountCategory",
                "updateAccountCategory",
                "deleteAccountCategory",
                "restoreAccountCategory"
              ],
              "implementedMethods": [
                "getAllAccountCategories",
                "getAccountCategoryById",
                "createAccountCategory",
                "updateAccountCategory",
                "deleteAccountCategory",
                "restoreAccountCategory"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "transactions",
              "isCompliant": true,
              "requiredMethods": [
                "getAllTransactions",
                "getTransactions",
                "getTransactionFullyById",
                "getTransactionById",
                "getTransactionByTransferId",
                "getTransactionsByName",
                "createTransaction",
                "createTransactions",
                "createMultipleTransactions",
                "updateTransaction",
                "updateTransferTransaction",
                "deleteTransaction",
                "restoreTransaction"
              ],
              "implementedMethods": [
                "getAllTransactions",
                "getTransactions",
                "getTransactionFullyById",
                "getTransactionById",
                "getTransactionByTransferId",
                "getTransactionsByName",
                "createTransaction",
                "createTransactions",
                "createMultipleTransactions",
                "updateTransaction",
                "updateTransferTransaction",
                "deleteTransaction",
                "restoreTransaction"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "transactionCategories",
              "isCompliant": true,
              "requiredMethods": [
                "getAllTransactionCategories",
                "getTransactionCategoryById",
                "createTransactionCategory",
                "updateTransactionCategory",
                "deleteTransactionCategory",
                "restoreTransactionCategory"
              ],
              "implementedMethods": [
                "getAllTransactionCategories",
                "getTransactionCategoryById",
                "createTransactionCategory",
                "updateTransactionCategory",
                "deleteTransactionCategory",
                "restoreTransactionCategory"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "transactionGroups",
              "isCompliant": true,
              "requiredMethods": [
                "getAllTransactionGroups",
                "getTransactionGroupById",
                "createTransactionGroup",
                "updateTransactionGroup",
                "deleteTransactionGroup",
                "restoreTransactionGroup"
              ],
              "implementedMethods": [
                "getAllTransactionGroups",
                "getTransactionGroupById",
                "createTransactionGroup",
                "updateTransactionGroup",
                "deleteTransactionGroup",
                "restoreTransactionGroup"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "configurations",
              "isCompliant": true,
              "requiredMethods": [
                "getAllConfigurations",
                "getConfigurationById",
                "getConfiguration",
                "createConfiguration",
                "updateConfiguration",
                "deleteConfiguration",
                "restoreConfiguration"
              ],
              "implementedMethods": [
                "getAllConfigurations",
                "getConfigurationById",
                "getConfiguration",
                "createConfiguration",
                "updateConfiguration",
                "deleteConfiguration",
                "restoreConfiguration"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "recurrings",
              "isCompliant": true,
              "requiredMethods": [
                "listRecurrings",
                "getRecurringById",
                "createRecurring",
                "updateRecurring",
                "deleteRecurring"
              ],
              "implementedMethods": [
                "listRecurrings",
                "getRecurringById",
                "createRecurring",
                "updateRecurring",
                "deleteRecurring"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "stats",
              "isCompliant": true,
              "requiredMethods": [
                "getStatsDailyTransactions",
                "getStatsMonthlyTransactionsTypes",
                "getStatsMonthlyCategoriesTransactions",
                "getStatsMonthlyAccountsTransactions",
                "getStatsNetWorthGrowth"
              ],
              "implementedMethods": [
                "getStatsDailyTransactions",
                "getStatsMonthlyTransactionsTypes",
                "getStatsMonthlyCategoriesTransactions",
                "getStatsMonthlyAccountsTransactions",
                "getStatsNetWorthGrowth"
              ],
              "missingMethods": [],
              "extraMethods": []
            }
          ],
          "violations": []
        }
      ],
      "crossModeComparison": {
        "consistentBehavior": true,
        "inconsistencies": [],
        "performanceComparison": [
          {
            "entityType": "accounts",
            "operation": "create",
            "results": {
              "demo": 26,
              "local": 76
            }
          },
          {
            "entityType": "accounts",
            "operation": "read",
            "results": {
              "demo": 15,
              "local": 76
            }
          },
          {
            "entityType": "accounts",
            "operation": "update",
            "results": {
              "demo": 63,
              "local": 142
            }
          },
          {
            "entityType": "accounts",
            "operation": "delete",
            "results": {
              "demo": 31,
              "local": 124
            }
          },
          {
            "entityType": "accountCategories",
            "operation": "create",
            "results": {
              "demo": 31,
              "local": 79
            }
          },
          {
            "entityType": "accountCategories",
            "operation": "read",
            "results": {
              "demo": 30,
              "local": 63
            }
          },
          {
            "entityType": "accountCategories",
            "operation": "update",
            "results": {
              "demo": 63,
              "local": 122
            }
          },
          {
            "entityType": "accountCategories",
            "operation": "delete",
            "results": {
              "demo": 63,
              "local": 125
            }
          },
          {
            "entityType": "transactions",
            "operation": "create",
            "results": {
              "demo": 47,
              "local": 76
            }
          },
          {
            "entityType": "transactions",
            "operation": "read",
            "results": {
              "demo": 31,
              "local": 78
            }
          },
          {
            "entityType": "transactions",
            "operation": "update",
            "results": {
              "demo": 46,
              "local": 126
            }
          },
          {
            "entityType": "transactions",
            "operation": "delete",
            "results": {
              "demo": 47,
              "local": 123
            }
          },
          {
            "entityType": "transactionCategories",
            "operation": "create",
            "results": {
              "demo": 30,
              "local": 62
            }
          },
          {
            "entityType": "transactionCategories",
            "operation": "read",
            "results": {
              "demo": 32,
              "local": 63
            }
          },
          {
            "entityType": "transactionCategories",
            "operation": "update",
            "results": {
              "demo": 32,
              "local": 139
            }
          },
          {
            "entityType": "transactionCategories",
            "operation": "delete",
            "results": {
              "demo": 64,
              "local": 142
            }
          },
          {
            "entityType": "transactionGroups",
            "operation": "create",
            "results": {
              "demo": 15,
              "local": 78
            }
          },
          {
            "entityType": "transactionGroups",
            "operation": "read",
            "results": {
              "demo": 31,
              "local": 78
            }
          },
          {
            "entityType": "transactionGroups",
            "operation": "update",
            "results": {
              "demo": 61,
              "local": 139
            }
          },
          {
            "entityType": "transactionGroups",
            "operation": "delete",
            "results": {
              "demo": 63,
              "local": 141
            }
          },
          {
            "entityType": "configurations",
            "operation": "create",
            "results": {
              "demo": 16,
              "local": 63
            }
          },
          {
            "entityType": "configurations",
            "operation": "read",
            "results": {
              "demo": 31,
              "local": 62
            }
          },
          {
            "entityType": "configurations",
            "operation": "update",
            "results": {
              "demo": 62,
              "local": 139
            }
          },
          {
            "entityType": "configurations",
            "operation": "delete",
            "results": {
              "demo": 62,
              "local": 141
            }
          },
          {
            "entityType": "recurrings",
            "operation": "create",
            "results": {
              "demo": 31,
              "local": 62
            }
          },
          {
            "entityType": "recurrings",
            "operation": "read",
            "results": {
              "demo": 31,
              "local": 61
            }
          },
          {
            "entityType": "recurrings",
            "operation": "update",
            "results": {
              "demo": 47,
              "local": 141
            }
          },
          {
            "entityType": "recurrings",
            "operation": "delete",
            "results": {
              "demo": 63,
              "local": 138
            }
          },
          {
            "entityType": "stats",
            "operation": "read",
            "results": {
              "demo": 15,
              "local": 79
            }
          }
        ]
      },
      "recommendations": [
        "2 storage mode(s) failed tests. Review the detailed reports to identify and fix issues.",
        "Significant performance differences detected between storage modes. Consider optimizing slower implementations."
      ]
    }

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:351:17)

  console.log
    
    ≡ƒÄë Test suite completed!

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:167:13)

  console.log
    ≡ƒÜÇ Starting Automated Storage Validation Test Suite...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:81:13)

  console.log
    Configuration: { modes: [ 'demo' ], outputFormat: 'markdown' }

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:82:13)

  console.log
    
    ≡ƒôï Testing DEMO mode...

      at log (src/services/storage/validation/AutomatedTestSuite.ts:108:15)
          at _loop.next (<anonymous>)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)
          at _loop.next (<anonymous>)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)
          at _loop.next (<anonymous>)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Γ¥î DEMO mode failed some tests

      at log (src/services/storage/validation/AutomatedTestSuite.ts:147:19)
          at _loop.next (<anonymous>)

  console.log
    
    ≡ƒöì Performing cross-mode comparison...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:157:13)

  console.log
    
    ≡ƒÆí Generating recommendations...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:161:13)

  console.log
    
    ≡ƒôä Markdown Report:

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:355:17)

  console.log
    # Storage Validation Test Suite Report
    
    **Generated:** 2025-08-14T23:06:42.937Z
    
    ## Summary
    
    - **Total Modes Tested:** 1
    - **Passed Modes:** 0
    - **Failed Modes:** 1
    - **Total Tests:** 44
    - **Passed Tests:** 41
    - **Failed Tests:** 2
    - **Skipped Tests:** 1
    - **Success Rate:** 93.2%
    
    ## Validation Results by Mode
    
    ### DEMO Mode
    
    - Total Tests: 44
    - Passed: 41
    - Failed: 2
    - Skipped: 1
    
    ## Interface Compliance
    
    ### DEMO Mode
    
    - Compliance Rate: 100.0%
    - Compliant Interfaces: 8
    - Non-Compliant Interfaces: 0
    
    ## Recommendations
    
    - 1 storage mode(s) failed tests. Review the detailed reports to identify and fix issues.

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:356:17)

  console.log
    
    ≡ƒÄë Test suite completed!

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:167:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for cloud mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for cloud: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for local mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for local: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    ≡ƒÜÇ Starting Automated Storage Validation Test Suite...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:81:13)

  console.log
    Configuration: { modes: [ 'cloud', 'demo', 'local' ], outputFormat: 'console' }

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:82:13)

  console.log
    
    ≡ƒôï Testing CLOUD mode...

      at log (src/services/storage/validation/AutomatedTestSuite.ts:108:15)
          at _loop.next (<anonymous>)

  console.log
    Starting validation for cloud storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)
          at _loop.next (<anonymous>)

  console.log
    Validation completed for cloud mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for cloud mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)
          at _loop.next (<anonymous>)

  console.log
    Interface compliance test completed for cloud: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Γ¥î CLOUD mode failed some tests

      at log (src/services/storage/validation/AutomatedTestSuite.ts:147:19)
          at _loop.next (<anonymous>)

  console.log
    
    ≡ƒôï Testing DEMO mode...

      at log (src/services/storage/validation/AutomatedTestSuite.ts:108:15)
          at _loop.next (<anonymous>)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)
          at _loop.next (<anonymous>)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)
          at _loop.next (<anonymous>)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Γ¥î DEMO mode failed some tests

      at log (src/services/storage/validation/AutomatedTestSuite.ts:147:19)
          at _loop.next (<anonymous>)

  console.log
    
    ≡ƒôï Testing LOCAL mode...

      at log (src/services/storage/validation/AutomatedTestSuite.ts:108:15)
          at _loop.next (<anonymous>)

  console.log
    Starting validation for local storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)
          at _loop.next (<anonymous>)

  console.log
    Validation completed for local mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for local mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)
          at _loop.next (<anonymous>)

  console.log
    Interface compliance test completed for local: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Γ¥î LOCAL mode failed some tests

      at log (src/services/storage/validation/AutomatedTestSuite.ts:147:19)
          at _loop.next (<anonymous>)

  console.log
    
    ≡ƒöì Performing cross-mode comparison...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:157:13)

  console.log
    
    ≡ƒÆí Generating recommendations...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:161:13)

  console.log
    
    ≡ƒôè TEST SUITE SUMMARY

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:365:13)

  console.log
    ==================================================

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:366:13)

  console.log
    Total Modes Tested: 3

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:367:13)

  console.log
    Passed Modes: 0

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:368:13)

  console.log
    Failed Modes: 3

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:369:13)

  console.log
    Total Tests: 132

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:370:13)

  console.log
    Passed Tests: 123

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:371:13)

  console.log
    Failed Tests: 6

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:372:13)

  console.log
    Skipped Tests: 3

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:373:13)

  console.log
    Success Rate: 93.2%

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:376:13)

  console.log
    
    ≡ƒÆí RECOMMENDATIONS

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:389:15)

  console.log
    --------------------

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:390:15)

  console.log
    ΓÇó 3 storage mode(s) failed tests. Review the detailed reports to identify and fix issues.

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:392:17)

  console.log
    ΓÇó Significant performance differences detected between storage modes. Consider optimizing slower implementations.

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:392:17)

  console.log
    
    ≡ƒÄë Test suite completed!

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:167:13)

  console.log
    ≡ƒÜÇ Starting Automated Storage Validation Test Suite...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:81:13)

  console.log
    Configuration: {
      modes: [ 'demo', 'local' ],
      skipIntegrityTests: true,
      outputFormat: 'console'
    }

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:82:13)

  console.log
    
    ≡ƒôï Testing DEMO mode...

      at log (src/services/storage/validation/AutomatedTestSuite.ts:108:15)
          at _loop.next (<anonymous>)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)
          at _loop.next (<anonymous>)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)
          at _loop.next (<anonymous>)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Γ¥î DEMO mode failed some tests

      at log (src/services/storage/validation/AutomatedTestSuite.ts:147:19)
          at _loop.next (<anonymous>)

  console.log
    
    ≡ƒôï Testing LOCAL mode...

      at log (src/services/storage/validation/AutomatedTestSuite.ts:108:15)
          at _loop.next (<anonymous>)

  console.log
    Starting validation for local storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)
          at _loop.next (<anonymous>)

  console.log
    Validation completed for local mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for local mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)
          at _loop.next (<anonymous>)

  console.log
    Interface compliance test completed for local: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Γ¥î LOCAL mode failed some tests

      at log (src/services/storage/validation/AutomatedTestSuite.ts:147:19)
          at _loop.next (<anonymous>)

  console.log
    
    ≡ƒöì Performing cross-mode comparison...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:157:13)

  console.log
    
    ≡ƒÆí Generating recommendations...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:161:13)

  console.log
    
    ≡ƒôè TEST SUITE SUMMARY

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:365:13)

  console.log
    ==================================================

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:366:13)

  console.log
    Total Modes Tested: 2

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:367:13)

  console.log
    Passed Modes: 0

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:368:13)

  console.log
    Failed Modes: 2

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:369:13)

  console.log
    Total Tests: 88

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:370:13)

  console.log
    Passed Tests: 82

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:371:13)

  console.log
    Failed Tests: 4

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:372:13)

  console.log
    Skipped Tests: 2

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:373:13)

  console.log
    Success Rate: 93.2%

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:376:13)

  console.log
    
    ≡ƒÆí RECOMMENDATIONS

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:389:15)

  console.log
    --------------------

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:390:15)

  console.log
    ΓÇó 2 storage mode(s) failed tests. Review the detailed reports to identify and fix issues.

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:392:17)

  console.log
    ΓÇó Significant performance differences detected between storage modes. Consider optimizing slower implementations.

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:392:17)

  console.log
    
    ≡ƒÄë Test suite completed!

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:167:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Starting validation for local storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Validation completed for local mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    ≡ƒÜÇ Starting Automated Storage Validation Test Suite...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:81:13)

  console.log
    Configuration: { modes: [ 'demo', 'local' ], outputFormat: 'json' }

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:82:13)

  console.log
    
    ≡ƒôï Testing DEMO mode...

      at log (src/services/storage/validation/AutomatedTestSuite.ts:108:15)
          at _loop.next (<anonymous>)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)
          at _loop.next (<anonymous>)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)
          at _loop.next (<anonymous>)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Γ¥î DEMO mode failed some tests

      at log (src/services/storage/validation/AutomatedTestSuite.ts:147:19)
          at _loop.next (<anonymous>)

  console.log
    
    ≡ƒôï Testing LOCAL mode...

      at log (src/services/storage/validation/AutomatedTestSuite.ts:108:15)
          at _loop.next (<anonymous>)

  console.log
    Starting validation for local storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)
          at _loop.next (<anonymous>)

  console.log
    Validation completed for local mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for local mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)
          at _loop.next (<anonymous>)

  console.log
    Interface compliance test completed for local: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Γ¥î LOCAL mode failed some tests

      at log (src/services/storage/validation/AutomatedTestSuite.ts:147:19)
          at _loop.next (<anonymous>)

  console.log
    
    ≡ƒöì Performing cross-mode comparison...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:157:13)

  console.log
    
    ≡ƒÆí Generating recommendations...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:161:13)

  console.log
    
    ≡ƒôä JSON Report:

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:350:17)

  console.log
    {
      "timestamp": "2025-08-14T23:07:00.191Z",
      "config": {
        "modes": [
          "demo",
          "local"
        ],
        "outputFormat": "json"
      },
      "summary": {
        "totalModes": 2,
        "passedModes": 0,
        "failedModes": 2,
        "totalTests": 88,
        "passedTests": 82,
        "failedTests": 4,
        "skippedTests": 2
      },
      "validationReports": [
        {
          "mode": "demo",
          "timestamp": "2025-08-14T23:07:00.192Z",
          "summary": {
            "totalTests": 44,
            "passed": 41,
            "failed": 2,
            "skipped": 1
          },
          "results": [
            {
              "testName": "Create accounts",
              "entityType": "accounts",
              "operation": "create",
              "status": "passed",
              "duration": 25,
              "details": "Successfully created accounts with ID: new-acc"
            },
            {
              "testName": "Read All accounts",
              "entityType": "accounts",
              "operation": "read",
              "status": "passed",
              "duration": 31,
              "details": "Successfully retrieved 2 accounts records"
            },
            {
              "testName": "Update accounts",
              "entityType": "accounts",
              "operation": "update",
              "status": "passed",
              "duration": 48,
              "details": "Successfully updated accounts with ID: acc-1"
            },
            {
              "testName": "Delete accounts",
              "entityType": "accounts",
              "operation": "delete",
              "status": "passed",
              "duration": 61,
              "details": "Successfully deleted accounts with ID: acc-1"
            },
            {
              "testName": "Interface Compliance - accounts",
              "entityType": "accounts",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 9 required methods are present"
            },
            {
              "testName": "Referential Integrity - accounts",
              "entityType": "accounts",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create accountCategories",
              "entityType": "accountCategories",
              "operation": "create",
              "status": "passed",
              "duration": 31,
              "details": "Successfully created accountCategories with ID: new-cat"
            },
            {
              "testName": "Read All accountCategories",
              "entityType": "accountCategories",
              "operation": "read",
              "status": "passed",
              "duration": 16,
              "details": "Successfully retrieved 2 accountCategories records"
            },
            {
              "testName": "Update accountCategories",
              "entityType": "accountCategories",
              "operation": "update",
              "status": "passed",
              "duration": 62,
              "details": "Successfully updated accountCategories with ID: cat-1"
            },
            {
              "testName": "Delete accountCategories",
              "entityType": "accountCategories",
              "operation": "delete",
              "status": "passed",
              "duration": 63,
              "details": "Successfully deleted accountCategories with ID: cat-1"
            },
            {
              "testName": "Interface Compliance - accountCategories",
              "entityType": "accountCategories",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 6 required methods are present"
            },
            {
              "testName": "Create transactions",
              "entityType": "transactions",
              "operation": "create",
              "status": "passed",
              "duration": 31,
              "details": "Successfully created transactions with ID: new-tr"
            },
            {
              "testName": "Read All transactions",
              "entityType": "transactions",
              "operation": "read",
              "status": "passed",
              "duration": 31,
              "details": "Successfully retrieved 1 transactions records"
            },
            {
              "testName": "Update transactions",
              "entityType": "transactions",
              "operation": "update",
              "status": "passed",
              "duration": 63,
              "details": "Successfully updated transactions with ID: tr-1"
            },
            {
              "testName": "Delete transactions",
              "entityType": "transactions",
              "operation": "delete",
              "status": "passed",
              "duration": 47,
              "details": "Successfully deleted transactions with ID: tr-1"
            },
            {
              "testName": "Interface Compliance - transactions",
              "entityType": "transactions",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 13 required methods are present"
            },
            {
              "testName": "Referential Integrity - transactions",
              "entityType": "transactions",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create transactionCategories",
              "entityType": "transactionCategories",
              "operation": "create",
              "status": "passed",
              "duration": 15,
              "details": "Successfully created transactionCategories with ID: new-tcat"
            },
            {
              "testName": "Read All transactionCategories",
              "entityType": "transactionCategories",
              "operation": "read",
              "status": "passed",
              "duration": 31,
              "details": "Successfully retrieved 1 transactionCategories records"
            },
            {
              "testName": "Update transactionCategories",
              "entityType": "transactionCategories",
              "operation": "update",
              "status": "passed",
              "duration": 62,
              "details": "Successfully updated transactionCategories with ID: tcat-1"
            },
            {
              "testName": "Delete transactionCategories",
              "entityType": "transactionCategories",
              "operation": "delete",
              "status": "passed",
              "duration": 63,
              "details": "Successfully deleted transactionCategories with ID: tcat-1"
            },
            {
              "testName": "Interface Compliance - transactionCategories",
              "entityType": "transactionCategories",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 6 required methods are present"
            },
            {
              "testName": "Referential Integrity - transactionCategories",
              "entityType": "transactionCategories",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create transactionGroups",
              "entityType": "transactionGroups",
              "operation": "create",
              "status": "passed",
              "duration": 31,
              "details": "Successfully created transactionGroups with ID: new-tg"
            },
            {
              "testName": "Read All transactionGroups",
              "entityType": "transactionGroups",
              "operation": "read",
              "status": "passed",
              "duration": 31,
              "details": "Successfully retrieved 1 transactionGroups records"
            },
            {
              "testName": "Update transactionGroups",
              "entityType": "transactionGroups",
              "operation": "update",
              "status": "passed",
              "duration": 63,
              "details": "Successfully updated transactionGroups with ID: tg-1"
            },
            {
              "testName": "Delete transactionGroups",
              "entityType": "transactionGroups",
              "operation": "delete",
              "status": "passed",
              "duration": 62,
              "details": "Successfully deleted transactionGroups with ID: tg-1"
            },
            {
              "testName": "Interface Compliance - transactionGroups",
              "entityType": "transactionGroups",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 6 required methods are present"
            },
            {
              "testName": "Create configurations",
              "entityType": "configurations",
              "operation": "create",
              "status": "passed",
              "duration": 15,
              "details": "Successfully created configurations with ID: new-conf"
            },
            {
              "testName": "Read All configurations",
              "entityType": "configurations",
              "operation": "read",
              "status": "passed",
              "duration": 15,
              "details": "Successfully retrieved 1 configurations records"
            },
            {
              "testName": "Update configurations",
              "entityType": "configurations",
              "operation": "update",
              "status": "passed",
              "duration": 47,
              "details": "Successfully updated configurations with ID: conf-1"
            },
            {
              "testName": "Delete configurations",
              "entityType": "configurations",
              "operation": "delete",
              "status": "passed",
              "duration": 62,
              "details": "Successfully deleted configurations with ID: conf-1"
            },
            {
              "testName": "Interface Compliance - configurations",
              "entityType": "configurations",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 7 required methods are present"
            },
            {
              "testName": "Create recurrings",
              "entityType": "recurrings",
              "operation": "create",
              "status": "passed",
              "duration": 30,
              "details": "Successfully created recurrings with ID: new-rec"
            },
            {
              "testName": "Read All recurrings",
              "entityType": "recurrings",
              "operation": "read",
              "status": "passed",
              "duration": 31,
              "details": "Successfully retrieved 1 recurrings records"
            },
            {
              "testName": "Update recurrings",
              "entityType": "recurrings",
              "operation": "update",
              "status": "passed",
              "duration": 63,
              "details": "Successfully updated recurrings with ID: rec-1"
            },
            {
              "testName": "Delete recurrings",
              "entityType": "recurrings",
              "operation": "delete",
              "status": "passed",
              "duration": 63,
              "details": "Successfully deleted recurrings with ID: rec-1"
            },
            {
              "testName": "Interface Compliance - recurrings",
              "entityType": "recurrings",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 5 required methods are present"
            },
            {
              "testName": "Referential Integrity - recurrings",
              "entityType": "recurrings",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create stats",
              "entityType": "stats",
              "operation": "create",
              "status": "failed",
              "duration": 0,
              "error": {}
            },
            {
              "testName": "Read All stats",
              "entityType": "stats",
              "operation": "read",
              "status": "passed",
              "duration": 31,
              "details": "Successfully retrieved 1 stats records"
            },
            {
              "testName": "Update stats",
              "entityType": "stats",
              "operation": "update",
              "status": "failed",
              "duration": 0,
              "error": {}
            },
            {
              "testName": "Delete stats",
              "entityType": "stats",
              "operation": "delete",
              "status": "skipped",
              "duration": 0,
              "details": "Stats entity does not support delete operations"
            },
            {
              "testName": "Interface Compliance - stats",
              "entityType": "stats",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 5 required methods are present"
            }
          ],
          "errors": [
            {
              "testName": "Create stats",
              "entityType": "stats",
              "error": {},
              "context": {
                "operation": "create",
                "testData": {}
              }
            },
            {
              "testName": "Update stats",
              "entityType": "stats",
              "error": {},
              "context": {
                "operation": "update",
                "updateData": {}
              }
            }
          ]
        },
        {
          "mode": "local",
          "timestamp": "2025-08-14T23:07:01.424Z",
          "summary": {
            "totalTests": 44,
            "passed": 41,
            "failed": 2,
            "skipped": 1
          },
          "results": [
            {
              "testName": "Create accounts",
              "entityType": "accounts",
              "operation": "create",
              "status": "passed",
              "duration": 56,
              "details": "Successfully created accounts with ID: new-acc"
            },
            {
              "testName": "Read All accounts",
              "entityType": "accounts",
              "operation": "read",
              "status": "passed",
              "duration": 61,
              "details": "Successfully retrieved 2 accounts records"
            },
            {
              "testName": "Update accounts",
              "entityType": "accounts",
              "operation": "update",
              "status": "passed",
              "duration": 143,
              "details": "Successfully updated accounts with ID: acc-1"
            },
            {
              "testName": "Delete accounts",
              "entityType": "accounts",
              "operation": "delete",
              "status": "passed",
              "duration": 140,
              "details": "Successfully deleted accounts with ID: acc-1"
            },
            {
              "testName": "Interface Compliance - accounts",
              "entityType": "accounts",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 9 required methods are present"
            },
            {
              "testName": "Referential Integrity - accounts",
              "entityType": "accounts",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create accountCategories",
              "entityType": "accountCategories",
              "operation": "create",
              "status": "passed",
              "duration": 61,
              "details": "Successfully created accountCategories with ID: new-cat"
            },
            {
              "testName": "Read All accountCategories",
              "entityType": "accountCategories",
              "operation": "read",
              "status": "passed",
              "duration": 63,
              "details": "Successfully retrieved 2 accountCategories records"
            },
            {
              "testName": "Update accountCategories",
              "entityType": "accountCategories",
              "operation": "update",
              "status": "passed",
              "duration": 126,
              "details": "Successfully updated accountCategories with ID: cat-1"
            },
            {
              "testName": "Delete accountCategories",
              "entityType": "accountCategories",
              "operation": "delete",
              "status": "passed",
              "duration": 143,
              "details": "Successfully deleted accountCategories with ID: cat-1"
            },
            {
              "testName": "Interface Compliance - accountCategories",
              "entityType": "accountCategories",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 6 required methods are present"
            },
            {
              "testName": "Create transactions",
              "entityType": "transactions",
              "operation": "create",
              "status": "passed",
              "duration": 76,
              "details": "Successfully created transactions with ID: new-tr"
            },
            {
              "testName": "Read All transactions",
              "entityType": "transactions",
              "operation": "read",
              "status": "passed",
              "duration": 64,
              "details": "Successfully retrieved 1 transactions records"
            },
            {
              "testName": "Update transactions",
              "entityType": "transactions",
              "operation": "update",
              "status": "passed",
              "duration": 126,
              "details": "Successfully updated transactions with ID: tr-1"
            },
            {
              "testName": "Delete transactions",
              "entityType": "transactions",
              "operation": "delete",
              "status": "passed",
              "duration": 142,
              "details": "Successfully deleted transactions with ID: tr-1"
            },
            {
              "testName": "Interface Compliance - transactions",
              "entityType": "transactions",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 13 required methods are present"
            },
            {
              "testName": "Referential Integrity - transactions",
              "entityType": "transactions",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create transactionCategories",
              "entityType": "transactionCategories",
              "operation": "create",
              "status": "passed",
              "duration": 61,
              "details": "Successfully created transactionCategories with ID: new-tcat"
            },
            {
              "testName": "Read All transactionCategories",
              "entityType": "transactionCategories",
              "operation": "read",
              "status": "passed",
              "duration": 64,
              "details": "Successfully retrieved 1 transactionCategories records"
            },
            {
              "testName": "Update transactionCategories",
              "entityType": "transactionCategories",
              "operation": "update",
              "status": "passed",
              "duration": 142,
              "details": "Successfully updated transactionCategories with ID: tcat-1"
            },
            {
              "testName": "Delete transactionCategories",
              "entityType": "transactionCategories",
              "operation": "delete",
              "status": "passed",
              "duration": 141,
              "details": "Successfully deleted transactionCategories with ID: tcat-1"
            },
            {
              "testName": "Interface Compliance - transactionCategories",
              "entityType": "transactionCategories",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 6 required methods are present"
            },
            {
              "testName": "Referential Integrity - transactionCategories",
              "entityType": "transactionCategories",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create transactionGroups",
              "entityType": "transactionGroups",
              "operation": "create",
              "status": "passed",
              "duration": 63,
              "details": "Successfully created transactionGroups with ID: new-tg"
            },
            {
              "testName": "Read All transactionGroups",
              "entityType": "transactionGroups",
              "operation": "read",
              "status": "passed",
              "duration": 61,
              "details": "Successfully retrieved 1 transactionGroups records"
            },
            {
              "testName": "Update transactionGroups",
              "entityType": "transactionGroups",
              "operation": "update",
              "status": "passed",
              "duration": 126,
              "details": "Successfully updated transactionGroups with ID: tg-1"
            },
            {
              "testName": "Delete transactionGroups",
              "entityType": "transactionGroups",
              "operation": "delete",
              "status": "passed",
              "duration": 139,
              "details": "Successfully deleted transactionGroups with ID: tg-1"
            },
            {
              "testName": "Interface Compliance - transactionGroups",
              "entityType": "transactionGroups",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 6 required methods are present"
            },
            {
              "testName": "Create configurations",
              "entityType": "configurations",
              "operation": "create",
              "status": "passed",
              "duration": 63,
              "details": "Successfully created configurations with ID: new-conf"
            },
            {
              "testName": "Read All configurations",
              "entityType": "configurations",
              "operation": "read",
              "status": "passed",
              "duration": 62,
              "details": "Successfully retrieved 1 configurations records"
            },
            {
              "testName": "Update configurations",
              "entityType": "configurations",
              "operation": "update",
              "status": "passed",
              "duration": 127,
              "details": "Successfully updated configurations with ID: conf-1"
            },
            {
              "testName": "Delete configurations",
              "entityType": "configurations",
              "operation": "delete",
              "status": "passed",
              "duration": 124,
              "details": "Successfully deleted configurations with ID: conf-1"
            },
            {
              "testName": "Interface Compliance - configurations",
              "entityType": "configurations",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 7 required methods are present"
            },
            {
              "testName": "Create recurrings",
              "entityType": "recurrings",
              "operation": "create",
              "status": "passed",
              "duration": 76,
              "details": "Successfully created recurrings with ID: new-rec"
            },
            {
              "testName": "Read All recurrings",
              "entityType": "recurrings",
              "operation": "read",
              "status": "passed",
              "duration": 64,
              "details": "Successfully retrieved 1 recurrings records"
            },
            {
              "testName": "Update recurrings",
              "entityType": "recurrings",
              "operation": "update",
              "status": "passed",
              "duration": 124,
              "details": "Successfully updated recurrings with ID: rec-1"
            },
            {
              "testName": "Delete recurrings",
              "entityType": "recurrings",
              "operation": "delete",
              "status": "passed",
              "duration": 140,
              "details": "Successfully deleted recurrings with ID: rec-1"
            },
            {
              "testName": "Interface Compliance - recurrings",
              "entityType": "recurrings",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 5 required methods are present"
            },
            {
              "testName": "Referential Integrity - recurrings",
              "entityType": "recurrings",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create stats",
              "entityType": "stats",
              "operation": "create",
              "status": "failed",
              "duration": 0,
              "error": {}
            },
            {
              "testName": "Read All stats",
              "entityType": "stats",
              "operation": "read",
              "status": "passed",
              "duration": 77,
              "details": "Successfully retrieved 1 stats records"
            },
            {
              "testName": "Update stats",
              "entityType": "stats",
              "operation": "update",
              "status": "failed",
              "duration": 0,
              "error": {}
            },
            {
              "testName": "Delete stats",
              "entityType": "stats",
              "operation": "delete",
              "status": "skipped",
              "duration": 1,
              "details": "Stats entity does not support delete operations"
            },
            {
              "testName": "Interface Compliance - stats",
              "entityType": "stats",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 5 required methods are present"
            }
          ],
          "errors": [
            {
              "testName": "Create stats",
              "entityType": "stats",
              "error": {},
              "context": {
                "operation": "create",
                "testData": {}
              }
            },
            {
              "testName": "Update stats",
              "entityType": "stats",
              "error": {},
              "context": {
                "operation": "update",
                "updateData": {}
              }
            }
          ]
        }
      ],
      "complianceReports": [
        {
          "mode": "demo",
          "timestamp": "2025-08-14T23:07:01.419Z",
          "summary": {
            "totalInterfaces": 8,
            "compliantInterfaces": 8,
            "nonCompliantInterfaces": 0
          },
          "results": [
            {
              "entityType": "accounts",
              "isCompliant": true,
              "requiredMethods": [
                "getAllAccounts",
                "getAccountById",
                "createAccount",
                "updateAccount",
                "deleteAccount",
                "restoreAccount",
                "updateAccountBalance",
                "getAccountOpenedTransaction",
                "getTotalAccountBalance"
              ],
              "implementedMethods": [
                "getAllAccounts",
                "getAccountById",
                "createAccount",
                "updateAccount",
                "deleteAccount",
                "restoreAccount",
                "updateAccountBalance",
                "getAccountOpenedTransaction",
                "getTotalAccountBalance"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "accountCategories",
              "isCompliant": true,
              "requiredMethods": [
                "getAllAccountCategories",
                "getAccountCategoryById",
                "createAccountCategory",
                "updateAccountCategory",
                "deleteAccountCategory",
                "restoreAccountCategory"
              ],
              "implementedMethods": [
                "getAllAccountCategories",
                "getAccountCategoryById",
                "createAccountCategory",
                "updateAccountCategory",
                "deleteAccountCategory",
                "restoreAccountCategory"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "transactions",
              "isCompliant": true,
              "requiredMethods": [
                "getAllTransactions",
                "getTransactions",
                "getTransactionFullyById",
                "getTransactionById",
                "getTransactionByTransferId",
                "getTransactionsByName",
                "createTransaction",
                "createTransactions",
                "createMultipleTransactions",
                "updateTransaction",
                "updateTransferTransaction",
                "deleteTransaction",
                "restoreTransaction"
              ],
              "implementedMethods": [
                "getAllTransactions",
                "getTransactions",
                "getTransactionFullyById",
                "getTransactionById",
                "getTransactionByTransferId",
                "getTransactionsByName",
                "createTransaction",
                "createTransactions",
                "createMultipleTransactions",
                "updateTransaction",
                "updateTransferTransaction",
                "deleteTransaction",
                "restoreTransaction"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "transactionCategories",
              "isCompliant": true,
              "requiredMethods": [
                "getAllTransactionCategories",
                "getTransactionCategoryById",
                "createTransactionCategory",
                "updateTransactionCategory",
                "deleteTransactionCategory",
                "restoreTransactionCategory"
              ],
              "implementedMethods": [
                "getAllTransactionCategories",
                "getTransactionCategoryById",
                "createTransactionCategory",
                "updateTransactionCategory",
                "deleteTransactionCategory",
                "restoreTransactionCategory"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "transactionGroups",
              "isCompliant": true,
              "requiredMethods": [
                "getAllTransactionGroups",
                "getTransactionGroupById",
                "createTransactionGroup",
                "updateTransactionGroup",
                "deleteTransactionGroup",
                "restoreTransactionGroup"
              ],
              "implementedMethods": [
                "getAllTransactionGroups",
                "getTransactionGroupById",
                "createTransactionGroup",
                "updateTransactionGroup",
                "deleteTransactionGroup",
                "restoreTransactionGroup"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "configurations",
              "isCompliant": true,
              "requiredMethods": [
                "getAllConfigurations",
                "getConfigurationById",
                "getConfiguration",
                "createConfiguration",
                "updateConfiguration",
                "deleteConfiguration",
                "restoreConfiguration"
              ],
              "implementedMethods": [
                "getAllConfigurations",
                "getConfigurationById",
                "getConfiguration",
                "createConfiguration",
                "updateConfiguration",
                "deleteConfiguration",
                "restoreConfiguration"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "recurrings",
              "isCompliant": true,
              "requiredMethods": [
                "listRecurrings",
                "getRecurringById",
                "createRecurring",
                "updateRecurring",
                "deleteRecurring"
              ],
              "implementedMethods": [
                "listRecurrings",
                "getRecurringById",
                "createRecurring",
                "updateRecurring",
                "deleteRecurring"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "stats",
              "isCompliant": true,
              "requiredMethods": [
                "getStatsDailyTransactions",
                "getStatsMonthlyTransactionsTypes",
                "getStatsMonthlyCategoriesTransactions",
                "getStatsMonthlyAccountsTransactions",
                "getStatsNetWorthGrowth"
              ],
              "implementedMethods": [
                "getStatsDailyTransactions",
                "getStatsMonthlyTransactionsTypes",
                "getStatsMonthlyCategoriesTransactions",
                "getStatsMonthlyAccountsTransactions",
                "getStatsNetWorthGrowth"
              ],
              "missingMethods": [],
              "extraMethods": []
            }
          ],
          "violations": []
        },
        {
          "mode": "local",
          "timestamp": "2025-08-14T23:07:04.283Z",
          "summary": {
            "totalInterfaces": 8,
            "compliantInterfaces": 8,
            "nonCompliantInterfaces": 0
          },
          "results": [
            {
              "entityType": "accounts",
              "isCompliant": true,
              "requiredMethods": [
                "getAllAccounts",
                "getAccountById",
                "createAccount",
                "updateAccount",
                "deleteAccount",
                "restoreAccount",
                "updateAccountBalance",
                "getAccountOpenedTransaction",
                "getTotalAccountBalance"
              ],
              "implementedMethods": [
                "getAllAccounts",
                "getAccountById",
                "createAccount",
                "updateAccount",
                "deleteAccount",
                "restoreAccount",
                "updateAccountBalance",
                "getAccountOpenedTransaction",
                "getTotalAccountBalance"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "accountCategories",
              "isCompliant": true,
              "requiredMethods": [
                "getAllAccountCategories",
                "getAccountCategoryById",
                "createAccountCategory",
                "updateAccountCategory",
                "deleteAccountCategory",
                "restoreAccountCategory"
              ],
              "implementedMethods": [
                "getAllAccountCategories",
                "getAccountCategoryById",
                "createAccountCategory",
                "updateAccountCategory",
                "deleteAccountCategory",
                "restoreAccountCategory"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "transactions",
              "isCompliant": true,
              "requiredMethods": [
                "getAllTransactions",
                "getTransactions",
                "getTransactionFullyById",
                "getTransactionById",
                "getTransactionByTransferId",
                "getTransactionsByName",
                "createTransaction",
                "createTransactions",
                "createMultipleTransactions",
                "updateTransaction",
                "updateTransferTransaction",
                "deleteTransaction",
                "restoreTransaction"
              ],
              "implementedMethods": [
                "getAllTransactions",
                "getTransactions",
                "getTransactionFullyById",
                "getTransactionById",
                "getTransactionByTransferId",
                "getTransactionsByName",
                "createTransaction",
                "createTransactions",
                "createMultipleTransactions",
                "updateTransaction",
                "updateTransferTransaction",
                "deleteTransaction",
                "restoreTransaction"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "transactionCategories",
              "isCompliant": true,
              "requiredMethods": [
                "getAllTransactionCategories",
                "getTransactionCategoryById",
                "createTransactionCategory",
                "updateTransactionCategory",
                "deleteTransactionCategory",
                "restoreTransactionCategory"
              ],
              "implementedMethods": [
                "getAllTransactionCategories",
                "getTransactionCategoryById",
                "createTransactionCategory",
                "updateTransactionCategory",
                "deleteTransactionCategory",
                "restoreTransactionCategory"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "transactionGroups",
              "isCompliant": true,
              "requiredMethods": [
                "getAllTransactionGroups",
                "getTransactionGroupById",
                "createTransactionGroup",
                "updateTransactionGroup",
                "deleteTransactionGroup",
                "restoreTransactionGroup"
              ],
              "implementedMethods": [
                "getAllTransactionGroups",
                "getTransactionGroupById",
                "createTransactionGroup",
                "updateTransactionGroup",
                "deleteTransactionGroup",
                "restoreTransactionGroup"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "configurations",
              "isCompliant": true,
              "requiredMethods": [
                "getAllConfigurations",
                "getConfigurationById",
                "getConfiguration",
                "createConfiguration",
                "updateConfiguration",
                "deleteConfiguration",
                "restoreConfiguration"
              ],
              "implementedMethods": [
                "getAllConfigurations",
                "getConfigurationById",
                "getConfiguration",
                "createConfiguration",
                "updateConfiguration",
                "deleteConfiguration",
                "restoreConfiguration"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "recurrings",
              "isCompliant": true,
              "requiredMethods": [
                "listRecurrings",
                "getRecurringById",
                "createRecurring",
                "updateRecurring",
                "deleteRecurring"
              ],
              "implementedMethods": [
                "listRecurrings",
                "getRecurringById",
                "createRecurring",
                "updateRecurring",
                "deleteRecurring"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "stats",
              "isCompliant": true,
              "requiredMethods": [
                "getStatsDailyTransactions",
                "getStatsMonthlyTransactionsTypes",
                "getStatsMonthlyCategoriesTransactions",
                "getStatsMonthlyAccountsTransactions",
                "getStatsNetWorthGrowth"
              ],
              "implementedMethods": [
                "getStatsDailyTransactions",
                "getStatsMonthlyTransactionsTypes",
                "getStatsMonthlyCategoriesTransactions",
                "getStatsMonthlyAccountsTransactions",
                "getStatsNetWorthGrowth"
              ],
              "missingMethods": [],
              "extraMethods": []
            }
          ],
          "violations": []
        }
      ],
      "crossModeComparison": {
        "consistentBehavior": true,
        "inconsistencies": [],
        "performanceComparison": [
          {
            "entityType": "accounts",
            "operation": "create",
            "results": {
              "demo": 25,
              "local": 56
            }
          },
          {
            "entityType": "accounts",
            "operation": "read",
            "results": {
              "demo": 31,
              "local": 61
            }
          },
          {
            "entityType": "accounts",
            "operation": "update",
            "results": {
              "demo": 48,
              "local": 143
            }
          },
          {
            "entityType": "accounts",
            "operation": "delete",
            "results": {
              "demo": 61,
              "local": 140
            }
          },
          {
            "entityType": "accountCategories",
            "operation": "create",
            "results": {
              "demo": 31,
              "local": 61
            }
          },
          {
            "entityType": "accountCategories",
            "operation": "read",
            "results": {
              "demo": 16,
              "local": 63
            }
          },
          {
            "entityType": "accountCategories",
            "operation": "update",
            "results": {
              "demo": 62,
              "local": 126
            }
          },
          {
            "entityType": "accountCategories",
            "operation": "delete",
            "results": {
              "demo": 63,
              "local": 143
            }
          },
          {
            "entityType": "transactions",
            "operation": "create",
            "results": {
              "demo": 31,
              "local": 76
            }
          },
          {
            "entityType": "transactions",
            "operation": "read",
            "results": {
              "demo": 31,
              "local": 64
            }
          },
          {
            "entityType": "transactions",
            "operation": "update",
            "results": {
              "demo": 63,
              "local": 126
            }
          },
          {
            "entityType": "transactions",
            "operation": "delete",
            "results": {
              "demo": 47,
              "local": 142
            }
          },
          {
            "entityType": "transactionCategories",
            "operation": "create",
            "results": {
              "demo": 15,
              "local": 61
            }
          },
          {
            "entityType": "transactionCategories",
            "operation": "read",
            "results": {
              "demo": 31,
              "local": 64
            }
          },
          {
            "entityType": "transactionCategories",
            "operation": "update",
            "results": {
              "demo": 62,
              "local": 142
            }
          },
          {
            "entityType": "transactionCategories",
            "operation": "delete",
            "results": {
              "demo": 63,
              "local": 141
            }
          },
          {
            "entityType": "transactionGroups",
            "operation": "create",
            "results": {
              "demo": 31,
              "local": 63
            }
          },
          {
            "entityType": "transactionGroups",
            "operation": "read",
            "results": {
              "demo": 31,
              "local": 61
            }
          },
          {
            "entityType": "transactionGroups",
            "operation": "update",
            "results": {
              "demo": 63,
              "local": 126
            }
          },
          {
            "entityType": "transactionGroups",
            "operation": "delete",
            "results": {
              "demo": 62,
              "local": 139
            }
          },
          {
            "entityType": "configurations",
            "operation": "create",
            "results": {
              "demo": 15,
              "local": 63
            }
          },
          {
            "entityType": "configurations",
            "operation": "read",
            "results": {
              "demo": 15,
              "local": 62
            }
          },
          {
            "entityType": "configurations",
            "operation": "update",
            "results": {
              "demo": 47,
              "local": 127
            }
          },
          {
            "entityType": "configurations",
            "operation": "delete",
            "results": {
              "demo": 62,
              "local": 124
            }
          },
          {
            "entityType": "recurrings",
            "operation": "create",
            "results": {
              "demo": 30,
              "local": 76
            }
          },
          {
            "entityType": "recurrings",
            "operation": "read",
            "results": {
              "demo": 31,
              "local": 64
            }
          },
          {
            "entityType": "recurrings",
            "operation": "update",
            "results": {
              "demo": 63,
              "local": 124
            }
          },
          {
            "entityType": "recurrings",
            "operation": "delete",
            "results": {
              "demo": 63,
              "local": 140
            }
          },
          {
            "entityType": "stats",
            "operation": "read",
            "results": {
              "demo": 31,
              "local": 77
            }
          }
        ]
      },
      "recommendations": [
        "2 storage mode(s) failed tests. Review the detailed reports to identify and fix issues.",
        "Significant performance differences detected between storage modes. Consider optimizing slower implementations."
      ]
    }

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:351:17)

  console.log
    
    ≡ƒÄë Test suite completed!

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:167:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 37, failed: 6, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    ≡ƒÜÇ Starting Automated Storage Validation Test Suite...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:81:13)

  console.log
    Configuration: { modes: [ 'demo', 'local' ], outputFormat: 'console' }

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:82:13)

  console.log
    
    ≡ƒôï Testing DEMO mode...

      at log (src/services/storage/validation/AutomatedTestSuite.ts:108:15)
          at _loop.next (<anonymous>)

  console.log
    
    ≡ƒôï Testing LOCAL mode...

      at log (src/services/storage/validation/AutomatedTestSuite.ts:108:15)
          at _loop.next (<anonymous>)
          at Generator.throw (<anonymous>)

  console.log
    Starting validation for local storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)
          at _loop.next (<anonymous>)

  console.log
    Validation completed for local mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for local mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)
          at _loop.next (<anonymous>)

  console.log
    Interface compliance test completed for local: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Γ¥î LOCAL mode failed some tests

      at log (src/services/storage/validation/AutomatedTestSuite.ts:147:19)
          at _loop.next (<anonymous>)

  console.log
    
    ≡ƒöì Performing cross-mode comparison...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:157:13)

  console.log
    
    ≡ƒÆí Generating recommendations...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:161:13)

  console.log
    
    ≡ƒôè TEST SUITE SUMMARY

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:365:13)

  console.log
    ==================================================

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:366:13)

  console.log
    Total Modes Tested: 2

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:367:13)

  console.log
    Passed Modes: 0

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:368:13)

  console.log
    Failed Modes: 2

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:369:13)

  console.log
    Total Tests: 44

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:370:13)

  console.log
    Passed Tests: 41

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:371:13)

  console.log
    Failed Tests: 2

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:372:13)

  console.log
    Skipped Tests: 1

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:373:13)

  console.log
    Success Rate: 93.2%

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:376:13)

  console.log
    
    ≡ƒÆí RECOMMENDATIONS

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:389:15)

  console.log
    --------------------

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:390:15)

  console.log
    ΓÇó 2 storage mode(s) failed tests. Review the detailed reports to identify and fix issues.

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:392:17)

  console.log
    
    ≡ƒÄë Test suite completed!

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:167:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 0,
      nonCompliantInterfaces: 8
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for cloud mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for cloud: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for local mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for local: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    ≡ƒÜÇ Starting Automated Storage Validation Test Suite...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:81:13)

  console.log
    Configuration: { modes: [ 'cloud', 'demo', 'local' ], outputFormat: 'console' }

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:82:13)

  console.log
    
    ≡ƒôï Testing CLOUD mode...

      at log (src/services/storage/validation/AutomatedTestSuite.ts:108:15)
          at _loop.next (<anonymous>)

  console.log
    Starting validation for cloud storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)
          at _loop.next (<anonymous>)

  console.log
    Validation completed for cloud mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for cloud mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)
          at _loop.next (<anonymous>)

  console.log
    Interface compliance test completed for cloud: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Γ¥î CLOUD mode failed some tests

      at log (src/services/storage/validation/AutomatedTestSuite.ts:147:19)
          at _loop.next (<anonymous>)

  console.log
    
    ≡ƒôï Testing DEMO mode...

      at log (src/services/storage/validation/AutomatedTestSuite.ts:108:15)
          at _loop.next (<anonymous>)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)
          at _loop.next (<anonymous>)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)
          at _loop.next (<anonymous>)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Γ¥î DEMO mode failed some tests

      at log (src/services/storage/validation/AutomatedTestSuite.ts:147:19)
          at _loop.next (<anonymous>)

  console.log
    
    ≡ƒôï Testing LOCAL mode...

      at log (src/services/storage/validation/AutomatedTestSuite.ts:108:15)
          at _loop.next (<anonymous>)

  console.log
    Starting validation for local storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)
          at _loop.next (<anonymous>)

  console.log
    Validation completed for local mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for local mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)
          at _loop.next (<anonymous>)

  console.log
    Interface compliance test completed for local: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Γ¥î LOCAL mode failed some tests

      at log (src/services/storage/validation/AutomatedTestSuite.ts:147:19)
          at _loop.next (<anonymous>)

  console.log
    
    ≡ƒöì Performing cross-mode comparison...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:157:13)

  console.log
    
    ≡ƒÆí Generating recommendations...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:161:13)

  console.log
    
    ≡ƒôè TEST SUITE SUMMARY

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:365:13)

  console.log
    ==================================================

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:366:13)

  console.log
    Total Modes Tested: 3

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:367:13)

  console.log
    Passed Modes: 0

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:368:13)

  console.log
    Failed Modes: 3

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:369:13)

  console.log
    Total Tests: 132

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:370:13)

  console.log
    Passed Tests: 123

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:371:13)

  console.log
    Failed Tests: 6

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:372:13)

  console.log
    Skipped Tests: 3

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:373:13)

  console.log
    Success Rate: 93.2%

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:376:13)

  console.log
    
    ≡ƒÆí RECOMMENDATIONS

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:389:15)

  console.log
    --------------------

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:390:15)

  console.log
    ΓÇó 3 storage mode(s) failed tests. Review the detailed reports to identify and fix issues.

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:392:17)

  console.log
    ΓÇó Significant performance differences detected between storage modes. Consider optimizing slower implementations.

      at AutomatedTestSuite.log [as outputToConsole] (src/services/storage/validation/AutomatedTestSuite.ts:392:17)

  console.log
    
    ≡ƒÄë Test suite completed!

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:167:13)

  console.log
    ≡ƒÜÇ Starting Automated Storage Validation Test Suite...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:81:13)

  console.log
    Configuration: { modes: [ 'demo', 'local' ], outputFormat: 'markdown' }

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:82:13)

  console.log
    
    ≡ƒôï Testing DEMO mode...

      at log (src/services/storage/validation/AutomatedTestSuite.ts:108:15)
          at _loop.next (<anonymous>)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)
          at _loop.next (<anonymous>)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)
          at _loop.next (<anonymous>)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Γ¥î DEMO mode failed some tests

      at log (src/services/storage/validation/AutomatedTestSuite.ts:147:19)
          at _loop.next (<anonymous>)

  console.log
    
    ≡ƒôï Testing LOCAL mode...

      at log (src/services/storage/validation/AutomatedTestSuite.ts:108:15)
          at _loop.next (<anonymous>)

  console.log
    Starting validation for local storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)
          at _loop.next (<anonymous>)

  console.log
    Validation completed for local mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for local mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)
          at _loop.next (<anonymous>)

  console.log
    Interface compliance test completed for local: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Γ¥î LOCAL mode failed some tests

      at log (src/services/storage/validation/AutomatedTestSuite.ts:147:19)
          at _loop.next (<anonymous>)

  console.log
    
    ≡ƒöì Performing cross-mode comparison...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:157:13)

  console.log
    
    ≡ƒÆí Generating recommendations...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:161:13)

  console.log
    
    ≡ƒôä Markdown Report:

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:355:17)

  console.log
    # Storage Validation Test Suite Report
    
    **Generated:** 2025-08-14T23:07:19.966Z
    
    ## Summary
    
    - **Total Modes Tested:** 2
    - **Passed Modes:** 0
    - **Failed Modes:** 2
    - **Total Tests:** 88
    - **Passed Tests:** 82
    - **Failed Tests:** 4
    - **Skipped Tests:** 2
    - **Success Rate:** 93.2%
    
    ## Validation Results by Mode
    
    ### DEMO Mode
    
    - Total Tests: 44
    - Passed: 41
    - Failed: 2
    - Skipped: 1
    
    ### LOCAL Mode
    
    - Total Tests: 44
    - Passed: 41
    - Failed: 2
    - Skipped: 1
    
    ## Interface Compliance
    
    ### DEMO Mode
    
    - Compliance Rate: 100.0%
    - Compliant Interfaces: 8
    - Non-Compliant Interfaces: 0
    
    ### LOCAL Mode
    
    - Compliance Rate: 100.0%
    - Compliant Interfaces: 8
    - Non-Compliant Interfaces: 0
    
    ## Recommendations
    
    - 2 storage mode(s) failed tests. Review the detailed reports to identify and fix issues.
    - Significant performance differences detected between storage modes. Consider optimizing slower implementations.

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:356:17)

  console.log
    
    ≡ƒÄë Test suite completed!

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:167:13)

  console.log
    ≡ƒÜÇ Starting Automated Storage Validation Test Suite...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:81:13)

  console.log
    Configuration: { modes: [ 'demo', 'local' ], outputFormat: 'json' }

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:82:13)

  console.log
    
    ≡ƒôï Testing DEMO mode...

      at log (src/services/storage/validation/AutomatedTestSuite.ts:108:15)
          at _loop.next (<anonymous>)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)
          at _loop.next (<anonymous>)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)
          at _loop.next (<anonymous>)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Γ¥î DEMO mode failed some tests

      at log (src/services/storage/validation/AutomatedTestSuite.ts:147:19)
          at _loop.next (<anonymous>)

  console.log
    
    ≡ƒôï Testing LOCAL mode...

      at log (src/services/storage/validation/AutomatedTestSuite.ts:108:15)
          at _loop.next (<anonymous>)

  console.log
    Starting validation for local storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)
          at _loop.next (<anonymous>)

  console.log
    Validation completed for local mode: { totalTests: 44, passed: 41, failed: 2, skipped: 1 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Testing interface compliance for local mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)
          at _loop.next (<anonymous>)

  console.log
    Interface compliance test completed for local: {
      totalInterfaces: 8,
      compliantInterfaces: 8,
      nonCompliantInterfaces: 0
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Γ¥î LOCAL mode failed some tests

      at log (src/services/storage/validation/AutomatedTestSuite.ts:147:19)
          at _loop.next (<anonymous>)

  console.log
    
    ≡ƒöì Performing cross-mode comparison...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:157:13)

  console.log
    
    ≡ƒÆí Generating recommendations...

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:161:13)

  console.log
    
    ≡ƒôä JSON Report:

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:350:17)

  console.log
    {
      "timestamp": "2025-08-14T23:07:24.083Z",
      "config": {
        "modes": [
          "demo",
          "local"
        ],
        "outputFormat": "json"
      },
      "summary": {
        "totalModes": 2,
        "passedModes": 0,
        "failedModes": 2,
        "totalTests": 88,
        "passedTests": 82,
        "failedTests": 4,
        "skippedTests": 2
      },
      "validationReports": [
        {
          "mode": "demo",
          "timestamp": "2025-08-14T23:07:24.085Z",
          "summary": {
            "totalTests": 44,
            "passed": 41,
            "failed": 2,
            "skipped": 1
          },
          "results": [
            {
              "testName": "Create accounts",
              "entityType": "accounts",
              "operation": "create",
              "status": "passed",
              "duration": 24,
              "details": "Successfully created accounts with ID: new-acc"
            },
            {
              "testName": "Read All accounts",
              "entityType": "accounts",
              "operation": "read",
              "status": "passed",
              "duration": 32,
              "details": "Successfully retrieved 2 accounts records"
            },
            {
              "testName": "Update accounts",
              "entityType": "accounts",
              "operation": "update",
              "status": "passed",
              "duration": 61,
              "details": "Successfully updated accounts with ID: acc-1"
            },
            {
              "testName": "Delete accounts",
              "entityType": "accounts",
              "operation": "delete",
              "status": "passed",
              "duration": 47,
              "details": "Successfully deleted accounts with ID: acc-1"
            },
            {
              "testName": "Interface Compliance - accounts",
              "entityType": "accounts",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 9 required methods are present"
            },
            {
              "testName": "Referential Integrity - accounts",
              "entityType": "accounts",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create accountCategories",
              "entityType": "accountCategories",
              "operation": "create",
              "status": "passed",
              "duration": 30,
              "details": "Successfully created accountCategories with ID: new-cat"
            },
            {
              "testName": "Read All accountCategories",
              "entityType": "accountCategories",
              "operation": "read",
              "status": "passed",
              "duration": 31,
              "details": "Successfully retrieved 2 accountCategories records"
            },
            {
              "testName": "Update accountCategories",
              "entityType": "accountCategories",
              "operation": "update",
              "status": "passed",
              "duration": 47,
              "details": "Successfully updated accountCategories with ID: cat-1"
            },
            {
              "testName": "Delete accountCategories",
              "entityType": "accountCategories",
              "operation": "delete",
              "status": "passed",
              "duration": 46,
              "details": "Successfully deleted accountCategories with ID: cat-1"
            },
            {
              "testName": "Interface Compliance - accountCategories",
              "entityType": "accountCategories",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 6 required methods are present"
            },
            {
              "testName": "Create transactions",
              "entityType": "transactions",
              "operation": "create",
              "status": "passed",
              "duration": 30,
              "details": "Successfully created transactions with ID: new-tr"
            },
            {
              "testName": "Read All transactions",
              "entityType": "transactions",
              "operation": "read",
              "status": "passed",
              "duration": 30,
              "details": "Successfully retrieved 1 transactions records"
            },
            {
              "testName": "Update transactions",
              "entityType": "transactions",
              "operation": "update",
              "status": "passed",
              "duration": 63,
              "details": "Successfully updated transactions with ID: tr-1"
            },
            {
              "testName": "Delete transactions",
              "entityType": "transactions",
              "operation": "delete",
              "status": "passed",
              "duration": 62,
              "details": "Successfully deleted transactions with ID: tr-1"
            },
            {
              "testName": "Interface Compliance - transactions",
              "entityType": "transactions",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 13 required methods are present"
            },
            {
              "testName": "Referential Integrity - transactions",
              "entityType": "transactions",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create transactionCategories",
              "entityType": "transactionCategories",
              "operation": "create",
              "status": "passed",
              "duration": 30,
              "details": "Successfully created transactionCategories with ID: new-tcat"
            },
            {
              "testName": "Read All transactionCategories",
              "entityType": "transactionCategories",
              "operation": "read",
              "status": "passed",
              "duration": 32,
              "details": "Successfully retrieved 1 transactionCategories records"
            },
            {
              "testName": "Update transactionCategories",
              "entityType": "transactionCategories",
              "operation": "update",
              "status": "passed",
              "duration": 63,
              "details": "Successfully updated transactionCategories with ID: tcat-1"
            },
            {
              "testName": "Delete transactionCategories",
              "entityType": "transactionCategories",
              "operation": "delete",
              "status": "passed",
              "duration": 62,
              "details": "Successfully deleted transactionCategories with ID: tcat-1"
            },
            {
              "testName": "Interface Compliance - transactionCategories",
              "entityType": "transactionCategories",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 6 required methods are present"
            },
            {
              "testName": "Referential Integrity - transactionCategories",
              "entityType": "transactionCategories",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create transactionGroups",
              "entityType": "transactionGroups",
              "operation": "create",
              "status": "passed",
              "duration": 16,
              "details": "Successfully created transactionGroups with ID: new-tg"
            },
            {
              "testName": "Read All transactionGroups",
              "entityType": "transactionGroups",
              "operation": "read",
              "status": "passed",
              "duration": 31,
              "details": "Successfully retrieved 1 transactionGroups records"
            },
            {
              "testName": "Update transactionGroups",
              "entityType": "transactionGroups",
              "operation": "update",
              "status": "passed",
              "duration": 46,
              "details": "Successfully updated transactionGroups with ID: tg-1"
            },
            {
              "testName": "Delete transactionGroups",
              "entityType": "transactionGroups",
              "operation": "delete",
              "status": "passed",
              "duration": 46,
              "details": "Successfully deleted transactionGroups with ID: tg-1"
            },
            {
              "testName": "Interface Compliance - transactionGroups",
              "entityType": "transactionGroups",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 6 required methods are present"
            },
            {
              "testName": "Create configurations",
              "entityType": "configurations",
              "operation": "create",
              "status": "passed",
              "duration": 32,
              "details": "Successfully created configurations with ID: new-conf"
            },
            {
              "testName": "Read All configurations",
              "entityType": "configurations",
              "operation": "read",
              "status": "passed",
              "duration": 31,
              "details": "Successfully retrieved 1 configurations records"
            },
            {
              "testName": "Update configurations",
              "entityType": "configurations",
              "operation": "update",
              "status": "passed",
              "duration": 47,
              "details": "Successfully updated configurations with ID: conf-1"
            },
            {
              "testName": "Delete configurations",
              "entityType": "configurations",
              "operation": "delete",
              "status": "passed",
              "duration": 62,
              "details": "Successfully deleted configurations with ID: conf-1"
            },
            {
              "testName": "Interface Compliance - configurations",
              "entityType": "configurations",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 7 required methods are present"
            },
            {
              "testName": "Create recurrings",
              "entityType": "recurrings",
              "operation": "create",
              "status": "passed",
              "duration": 31,
              "details": "Successfully created recurrings with ID: new-rec"
            },
            {
              "testName": "Read All recurrings",
              "entityType": "recurrings",
              "operation": "read",
              "status": "passed",
              "duration": 15,
              "details": "Successfully retrieved 1 recurrings records"
            },
            {
              "testName": "Update recurrings",
              "entityType": "recurrings",
              "operation": "update",
              "status": "passed",
              "duration": 62,
              "details": "Successfully updated recurrings with ID: rec-1"
            },
            {
              "testName": "Delete recurrings",
              "entityType": "recurrings",
              "operation": "delete",
              "status": "passed",
              "duration": 61,
              "details": "Successfully deleted recurrings with ID: rec-1"
            },
            {
              "testName": "Interface Compliance - recurrings",
              "entityType": "recurrings",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 5 required methods are present"
            },
            {
              "testName": "Referential Integrity - recurrings",
              "entityType": "recurrings",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create stats",
              "entityType": "stats",
              "operation": "create",
              "status": "failed",
              "duration": 0,
              "error": {}
            },
            {
              "testName": "Read All stats",
              "entityType": "stats",
              "operation": "read",
              "status": "passed",
              "duration": 15,
              "details": "Successfully retrieved 1 stats records"
            },
            {
              "testName": "Update stats",
              "entityType": "stats",
              "operation": "update",
              "status": "failed",
              "duration": 0,
              "error": {}
            },
            {
              "testName": "Delete stats",
              "entityType": "stats",
              "operation": "delete",
              "status": "skipped",
              "duration": 0,
              "details": "Stats entity does not support delete operations"
            },
            {
              "testName": "Interface Compliance - stats",
              "entityType": "stats",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 5 required methods are present"
            }
          ],
          "errors": [
            {
              "testName": "Create stats",
              "entityType": "stats",
              "error": {},
              "context": {
                "operation": "create",
                "testData": {}
              }
            },
            {
              "testName": "Update stats",
              "entityType": "stats",
              "error": {},
              "context": {
                "operation": "update",
                "updateData": {}
              }
            }
          ]
        },
        {
          "mode": "local",
          "timestamp": "2025-08-14T23:07:25.278Z",
          "summary": {
            "totalTests": 44,
            "passed": 41,
            "failed": 2,
            "skipped": 1
          },
          "results": [
            {
              "testName": "Create accounts",
              "entityType": "accounts",
              "operation": "create",
              "status": "passed",
              "duration": 74,
              "details": "Successfully created accounts with ID: new-acc"
            },
            {
              "testName": "Read All accounts",
              "entityType": "accounts",
              "operation": "read",
              "status": "passed",
              "duration": 78,
              "details": "Successfully retrieved 2 accounts records"
            },
            {
              "testName": "Update accounts",
              "entityType": "accounts",
              "operation": "update",
              "status": "passed",
              "duration": 139,
              "details": "Successfully updated accounts with ID: acc-1"
            },
            {
              "testName": "Delete accounts",
              "entityType": "accounts",
              "operation": "delete",
              "status": "passed",
              "duration": 141,
              "details": "Successfully deleted accounts with ID: acc-1"
            },
            {
              "testName": "Interface Compliance - accounts",
              "entityType": "accounts",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 9 required methods are present"
            },
            {
              "testName": "Referential Integrity - accounts",
              "entityType": "accounts",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create accountCategories",
              "entityType": "accountCategories",
              "operation": "create",
              "status": "passed",
              "duration": 62,
              "details": "Successfully created accountCategories with ID: new-cat"
            },
            {
              "testName": "Read All accountCategories",
              "entityType": "accountCategories",
              "operation": "read",
              "status": "passed",
              "duration": 63,
              "details": "Successfully retrieved 2 accountCategories records"
            },
            {
              "testName": "Update accountCategories",
              "entityType": "accountCategories",
              "operation": "update",
              "status": "passed",
              "duration": 140,
              "details": "Successfully updated accountCategories with ID: cat-1"
            },
            {
              "testName": "Delete accountCategories",
              "entityType": "accountCategories",
              "operation": "delete",
              "status": "passed",
              "duration": 142,
              "details": "Successfully deleted accountCategories with ID: cat-1"
            },
            {
              "testName": "Interface Compliance - accountCategories",
              "entityType": "accountCategories",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 6 required methods are present"
            },
            {
              "testName": "Create transactions",
              "entityType": "transactions",
              "operation": "create",
              "status": "passed",
              "duration": 77,
              "details": "Successfully created transactions with ID: new-tr"
            },
            {
              "testName": "Read All transactions",
              "entityType": "transactions",
              "operation": "read",
              "status": "passed",
              "duration": 78,
              "details": "Successfully retrieved 1 transactions records"
            },
            {
              "testName": "Update transactions",
              "entityType": "transactions",
              "operation": "update",
              "status": "passed",
              "duration": 157,
              "details": "Successfully updated transactions with ID: tr-1"
            },
            {
              "testName": "Delete transactions",
              "entityType": "transactions",
              "operation": "delete",
              "status": "passed",
              "duration": 153,
              "details": "Successfully deleted transactions with ID: tr-1"
            },
            {
              "testName": "Interface Compliance - transactions",
              "entityType": "transactions",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 13 required methods are present"
            },
            {
              "testName": "Referential Integrity - transactions",
              "entityType": "transactions",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create transactionCategories",
              "entityType": "transactionCategories",
              "operation": "create",
              "status": "passed",
              "duration": 64,
              "details": "Successfully created transactionCategories with ID: new-tcat"
            },
            {
              "testName": "Read All transactionCategories",
              "entityType": "transactionCategories",
              "operation": "read",
              "status": "passed",
              "duration": 62,
              "details": "Successfully retrieved 1 transactionCategories records"
            },
            {
              "testName": "Update transactionCategories",
              "entityType": "transactionCategories",
              "operation": "update",
              "status": "passed",
              "duration": 137,
              "details": "Successfully updated transactionCategories with ID: tcat-1"
            },
            {
              "testName": "Delete transactionCategories",
              "entityType": "transactionCategories",
              "operation": "delete",
              "status": "passed",
              "duration": 124,
              "details": "Successfully deleted transactionCategories with ID: tcat-1"
            },
            {
              "testName": "Interface Compliance - transactionCategories",
              "entityType": "transactionCategories",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 6 required methods are present"
            },
            {
              "testName": "Referential Integrity - transactionCategories",
              "entityType": "transactionCategories",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create transactionGroups",
              "entityType": "transactionGroups",
              "operation": "create",
              "status": "passed",
              "duration": 77,
              "details": "Successfully created transactionGroups with ID: new-tg"
            },
            {
              "testName": "Read All transactionGroups",
              "entityType": "transactionGroups",
              "operation": "read",
              "status": "passed",
              "duration": 63,
              "details": "Successfully retrieved 1 transactionGroups records"
            },
            {
              "testName": "Update transactionGroups",
              "entityType": "transactionGroups",
              "operation": "update",
              "status": "passed",
              "duration": 156,
              "details": "Successfully updated transactionGroups with ID: tg-1"
            },
            {
              "testName": "Delete transactionGroups",
              "entityType": "transactionGroups",
              "operation": "delete",
              "status": "passed",
              "duration": 125,
              "details": "Successfully deleted transactionGroups with ID: tg-1"
            },
            {
              "testName": "Interface Compliance - transactionGroups",
              "entityType": "transactionGroups",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 6 required methods are present"
            },
            {
              "testName": "Create configurations",
              "entityType": "configurations",
              "operation": "create",
              "status": "passed",
              "duration": 79,
              "details": "Successfully created configurations with ID: new-conf"
            },
            {
              "testName": "Read All configurations",
              "entityType": "configurations",
              "operation": "read",
              "status": "passed",
              "duration": 78,
              "details": "Successfully retrieved 1 configurations records"
            },
            {
              "testName": "Update configurations",
              "entityType": "configurations",
              "operation": "update",
              "status": "passed",
              "duration": 140,
              "details": "Successfully updated configurations with ID: conf-1"
            },
            {
              "testName": "Delete configurations",
              "entityType": "configurations",
              "operation": "delete",
              "status": "passed",
              "duration": 125,
              "details": "Successfully deleted configurations with ID: conf-1"
            },
            {
              "testName": "Interface Compliance - configurations",
              "entityType": "configurations",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 7 required methods are present"
            },
            {
              "testName": "Create recurrings",
              "entityType": "recurrings",
              "operation": "create",
              "status": "passed",
              "duration": 62,
              "details": "Successfully created recurrings with ID: new-rec"
            },
            {
              "testName": "Read All recurrings",
              "entityType": "recurrings",
              "operation": "read",
              "status": "passed",
              "duration": 77,
              "details": "Successfully retrieved 1 recurrings records"
            },
            {
              "testName": "Update recurrings",
              "entityType": "recurrings",
              "operation": "update",
              "status": "passed",
              "duration": 140,
              "details": "Successfully updated recurrings with ID: rec-1"
            },
            {
              "testName": "Delete recurrings",
              "entityType": "recurrings",
              "operation": "delete",
              "status": "passed",
              "duration": 138,
              "details": "Successfully deleted recurrings with ID: rec-1"
            },
            {
              "testName": "Interface Compliance - recurrings",
              "entityType": "recurrings",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 5 required methods are present"
            },
            {
              "testName": "Referential Integrity - recurrings",
              "entityType": "recurrings",
              "operation": "integrity",
              "status": "passed",
              "duration": 0,
              "details": "Referential integrity validation passed"
            },
            {
              "testName": "Create stats",
              "entityType": "stats",
              "operation": "create",
              "status": "failed",
              "duration": 0,
              "error": {}
            },
            {
              "testName": "Read All stats",
              "entityType": "stats",
              "operation": "read",
              "status": "passed",
              "duration": 79,
              "details": "Successfully retrieved 1 stats records"
            },
            {
              "testName": "Update stats",
              "entityType": "stats",
              "operation": "update",
              "status": "failed",
              "duration": 0,
              "error": {}
            },
            {
              "testName": "Delete stats",
              "entityType": "stats",
              "operation": "delete",
              "status": "skipped",
              "duration": 0,
              "details": "Stats entity does not support delete operations"
            },
            {
              "testName": "Interface Compliance - stats",
              "entityType": "stats",
              "operation": "interface",
              "status": "passed",
              "duration": 0,
              "details": "All 5 required methods are present"
            }
          ],
          "errors": [
            {
              "testName": "Create stats",
              "entityType": "stats",
              "error": {},
              "context": {
                "operation": "create",
                "testData": {}
              }
            },
            {
              "testName": "Update stats",
              "entityType": "stats",
              "error": {},
              "context": {
                "operation": "update",
                "updateData": {}
              }
            }
          ]
        }
      ],
      "complianceReports": [
        {
          "mode": "demo",
          "timestamp": "2025-08-14T23:07:25.276Z",
          "summary": {
            "totalInterfaces": 8,
            "compliantInterfaces": 8,
            "nonCompliantInterfaces": 0
          },
          "results": [
            {
              "entityType": "accounts",
              "isCompliant": true,
              "requiredMethods": [
                "getAllAccounts",
                "getAccountById",
                "createAccount",
                "updateAccount",
                "deleteAccount",
                "restoreAccount",
                "updateAccountBalance",
                "getAccountOpenedTransaction",
                "getTotalAccountBalance"
              ],
              "implementedMethods": [
                "getAllAccounts",
                "getAccountById",
                "createAccount",
                "updateAccount",
                "deleteAccount",
                "restoreAccount",
                "updateAccountBalance",
                "getAccountOpenedTransaction",
                "getTotalAccountBalance"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "accountCategories",
              "isCompliant": true,
              "requiredMethods": [
                "getAllAccountCategories",
                "getAccountCategoryById",
                "createAccountCategory",
                "updateAccountCategory",
                "deleteAccountCategory",
                "restoreAccountCategory"
              ],
              "implementedMethods": [
                "getAllAccountCategories",
                "getAccountCategoryById",
                "createAccountCategory",
                "updateAccountCategory",
                "deleteAccountCategory",
                "restoreAccountCategory"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "transactions",
              "isCompliant": true,
              "requiredMethods": [
                "getAllTransactions",
                "getTransactions",
                "getTransactionFullyById",
                "getTransactionById",
                "getTransactionByTransferId",
                "getTransactionsByName",
                "createTransaction",
                "createTransactions",
                "createMultipleTransactions",
                "updateTransaction",
                "updateTransferTransaction",
                "deleteTransaction",
                "restoreTransaction"
              ],
              "implementedMethods": [
                "getAllTransactions",
                "getTransactions",
                "getTransactionFullyById",
                "getTransactionById",
                "getTransactionByTransferId",
                "getTransactionsByName",
                "createTransaction",
                "createTransactions",
                "createMultipleTransactions",
                "updateTransaction",
                "updateTransferTransaction",
                "deleteTransaction",
                "restoreTransaction"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "transactionCategories",
              "isCompliant": true,
              "requiredMethods": [
                "getAllTransactionCategories",
                "getTransactionCategoryById",
                "createTransactionCategory",
                "updateTransactionCategory",
                "deleteTransactionCategory",
                "restoreTransactionCategory"
              ],
              "implementedMethods": [
                "getAllTransactionCategories",
                "getTransactionCategoryById",
                "createTransactionCategory",
                "updateTransactionCategory",
                "deleteTransactionCategory",
                "restoreTransactionCategory"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "transactionGroups",
              "isCompliant": true,
              "requiredMethods": [
                "getAllTransactionGroups",
                "getTransactionGroupById",
                "createTransactionGroup",
                "updateTransactionGroup",
                "deleteTransactionGroup",
                "restoreTransactionGroup"
              ],
              "implementedMethods": [
                "getAllTransactionGroups",
                "getTransactionGroupById",
                "createTransactionGroup",
                "updateTransactionGroup",
                "deleteTransactionGroup",
                "restoreTransactionGroup"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "configurations",
              "isCompliant": true,
              "requiredMethods": [
                "getAllConfigurations",
                "getConfigurationById",
                "getConfiguration",
                "createConfiguration",
                "updateConfiguration",
                "deleteConfiguration",
                "restoreConfiguration"
              ],
              "implementedMethods": [
                "getAllConfigurations",
                "getConfigurationById",
                "getConfiguration",
                "createConfiguration",
                "updateConfiguration",
                "deleteConfiguration",
                "restoreConfiguration"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "recurrings",
              "isCompliant": true,
              "requiredMethods": [
                "listRecurrings",
                "getRecurringById",
                "createRecurring",
                "updateRecurring",
                "deleteRecurring"
              ],
              "implementedMethods": [
                "listRecurrings",
                "getRecurringById",
                "createRecurring",
                "updateRecurring",
                "deleteRecurring"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "stats",
              "isCompliant": true,
              "requiredMethods": [
                "getStatsDailyTransactions",
                "getStatsMonthlyTransactionsTypes",
                "getStatsMonthlyCategoriesTransactions",
                "getStatsMonthlyAccountsTransactions",
                "getStatsNetWorthGrowth"
              ],
              "implementedMethods": [
                "getStatsDailyTransactions",
                "getStatsMonthlyTransactionsTypes",
                "getStatsMonthlyCategoriesTransactions",
                "getStatsMonthlyAccountsTransactions",
                "getStatsNetWorthGrowth"
              ],
              "missingMethods": [],
              "extraMethods": []
            }
          ],
          "violations": []
        },
        {
          "mode": "local",
          "timestamp": "2025-08-14T23:07:28.310Z",
          "summary": {
            "totalInterfaces": 8,
            "compliantInterfaces": 8,
            "nonCompliantInterfaces": 0
          },
          "results": [
            {
              "entityType": "accounts",
              "isCompliant": true,
              "requiredMethods": [
                "getAllAccounts",
                "getAccountById",
                "createAccount",
                "updateAccount",
                "deleteAccount",
                "restoreAccount",
                "updateAccountBalance",
                "getAccountOpenedTransaction",
                "getTotalAccountBalance"
              ],
              "implementedMethods": [
                "getAllAccounts",
                "getAccountById",
                "createAccount",
                "updateAccount",
                "deleteAccount",
                "restoreAccount",
                "updateAccountBalance",
                "getAccountOpenedTransaction",
                "getTotalAccountBalance"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "accountCategories",
              "isCompliant": true,
              "requiredMethods": [
                "getAllAccountCategories",
                "getAccountCategoryById",
                "createAccountCategory",
                "updateAccountCategory",
                "deleteAccountCategory",
                "restoreAccountCategory"
              ],
              "implementedMethods": [
                "getAllAccountCategories",
                "getAccountCategoryById",
                "createAccountCategory",
                "updateAccountCategory",
                "deleteAccountCategory",
                "restoreAccountCategory"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "transactions",
              "isCompliant": true,
              "requiredMethods": [
                "getAllTransactions",
                "getTransactions",
                "getTransactionFullyById",
                "getTransactionById",
                "getTransactionByTransferId",
                "getTransactionsByName",
                "createTransaction",
                "createTransactions",
                "createMultipleTransactions",
                "updateTransaction",
                "updateTransferTransaction",
                "deleteTransaction",
                "restoreTransaction"
              ],
              "implementedMethods": [
                "getAllTransactions",
                "getTransactions",
                "getTransactionFullyById",
                "getTransactionById",
                "getTransactionByTransferId",
                "getTransactionsByName",
                "createTransaction",
                "createTransactions",
                "createMultipleTransactions",
                "updateTransaction",
                "updateTransferTransaction",
                "deleteTransaction",
                "restoreTransaction"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "transactionCategories",
              "isCompliant": true,
              "requiredMethods": [
                "getAllTransactionCategories",
                "getTransactionCategoryById",
                "createTransactionCategory",
                "updateTransactionCategory",
                "deleteTransactionCategory",
                "restoreTransactionCategory"
              ],
              "implementedMethods": [
                "getAllTransactionCategories",
                "getTransactionCategoryById",
                "createTransactionCategory",
                "updateTransactionCategory",
                "deleteTransactionCategory",
                "restoreTransactionCategory"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "transactionGroups",
              "isCompliant": true,
              "requiredMethods": [
                "getAllTransactionGroups",
                "getTransactionGroupById",
                "createTransactionGroup",
                "updateTransactionGroup",
                "deleteTransactionGroup",
                "restoreTransactionGroup"
              ],
              "implementedMethods": [
                "getAllTransactionGroups",
                "getTransactionGroupById",
                "createTransactionGroup",
                "updateTransactionGroup",
                "deleteTransactionGroup",
                "restoreTransactionGroup"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "configurations",
              "isCompliant": true,
              "requiredMethods": [
                "getAllConfigurations",
                "getConfigurationById",
                "getConfiguration",
                "createConfiguration",
                "updateConfiguration",
                "deleteConfiguration",
                "restoreConfiguration"
              ],
              "implementedMethods": [
                "getAllConfigurations",
                "getConfigurationById",
                "getConfiguration",
                "createConfiguration",
                "updateConfiguration",
                "deleteConfiguration",
                "restoreConfiguration"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "recurrings",
              "isCompliant": true,
              "requiredMethods": [
                "listRecurrings",
                "getRecurringById",
                "createRecurring",
                "updateRecurring",
                "deleteRecurring"
              ],
              "implementedMethods": [
                "listRecurrings",
                "getRecurringById",
                "createRecurring",
                "updateRecurring",
                "deleteRecurring"
              ],
              "missingMethods": [],
              "extraMethods": []
            },
            {
              "entityType": "stats",
              "isCompliant": true,
              "requiredMethods": [
                "getStatsDailyTransactions",
                "getStatsMonthlyTransactionsTypes",
                "getStatsMonthlyCategoriesTransactions",
                "getStatsMonthlyAccountsTransactions",
                "getStatsNetWorthGrowth"
              ],
              "implementedMethods": [
                "getStatsDailyTransactions",
                "getStatsMonthlyTransactionsTypes",
                "getStatsMonthlyCategoriesTransactions",
                "getStatsMonthlyAccountsTransactions",
                "getStatsNetWorthGrowth"
              ],
              "missingMethods": [],
              "extraMethods": []
            }
          ],
          "violations": []
        }
      ],
      "crossModeComparison": {
        "consistentBehavior": true,
        "inconsistencies": [],
        "performanceComparison": [
          {
            "entityType": "accounts",
            "operation": "create",
            "results": {
              "demo": 24,
              "local": 74
            }
          },
          {
            "entityType": "accounts",
            "operation": "read",
            "results": {
              "demo": 32,
              "local": 78
            }
          },
          {
            "entityType": "accounts",
            "operation": "update",
            "results": {
              "demo": 61,
              "local": 139
            }
          },
          {
            "entityType": "accounts",
            "operation": "delete",
            "results": {
              "demo": 47,
              "local": 141
            }
          },
          {
            "entityType": "accountCategories",
            "operation": "create",
            "results": {
              "demo": 30,
              "local": 62
            }
          },
          {
            "entityType": "accountCategories",
            "operation": "read",
            "results": {
              "demo": 31,
              "local": 63
            }
          },
          {
            "entityType": "accountCategories",
            "operation": "update",
            "results": {
              "demo": 47,
              "local": 140
            }
          },
          {
            "entityType": "accountCategories",
            "operation": "delete",
            "results": {
              "demo": 46,
              "local": 142
            }
          },
          {
            "entityType": "transactions",
            "operation": "create",
            "results": {
              "demo": 30,
              "local": 77
            }
          },
          {
            "entityType": "transactions",
            "operation": "read",
            "results": {
              "demo": 30,
              "local": 78
            }
          },
          {
            "entityType": "transactions",
            "operation": "update",
            "results": {
              "demo": 63,
              "local": 157
            }
          },
          {
            "entityType": "transactions",
            "operation": "delete",
            "results": {
              "demo": 62,
              "local": 153
            }
          },
          {
            "entityType": "transactionCategories",
            "operation": "create",
            "results": {
              "demo": 30,
              "local": 64
            }
          },
          {
            "entityType": "transactionCategories",
            "operation": "read",
            "results": {
              "demo": 32,
              "local": 62
            }
          },
          {
            "entityType": "transactionCategories",
            "operation": "update",
            "results": {
              "demo": 63,
              "local": 137
            }
          },
          {
            "entityType": "transactionCategories",
            "operation": "delete",
            "results": {
              "demo": 62,
              "local": 124
            }
          },
          {
            "entityType": "transactionGroups",
            "operation": "create",
            "results": {
              "demo": 16,
              "local": 77
            }
          },
          {
            "entityType": "transactionGroups",
            "operation": "read",
            "results": {
              "demo": 31,
              "local": 63
            }
          },
          {
            "entityType": "transactionGroups",
            "operation": "update",
            "results": {
              "demo": 46,
              "local": 156
            }
          },
          {
            "entityType": "transactionGroups",
            "operation": "delete",
            "results": {
              "demo": 46,
              "local": 125
            }
          },
          {
            "entityType": "configurations",
            "operation": "create",
            "results": {
              "demo": 32,
              "local": 79
            }
          },
          {
            "entityType": "configurations",
            "operation": "read",
            "results": {
              "demo": 31,
              "local": 78
            }
          },
          {
            "entityType": "configurations",
            "operation": "update",
            "results": {
              "demo": 47,
              "local": 140
            }
          },
          {
            "entityType": "configurations",
            "operation": "delete",
            "results": {
              "demo": 62,
              "local": 125
            }
          },
          {
            "entityType": "recurrings",
            "operation": "create",
            "results": {
              "demo": 31,
              "local": 62
            }
          },
          {
            "entityType": "recurrings",
            "operation": "read",
            "results": {
              "demo": 15,
              "local": 77
            }
          },
          {
            "entityType": "recurrings",
            "operation": "update",
            "results": {
              "demo": 62,
              "local": 140
            }
          },
          {
            "entityType": "recurrings",
            "operation": "delete",
            "results": {
              "demo": 61,
              "local": 138
            }
          },
          {
            "entityType": "stats",
            "operation": "read",
            "results": {
              "demo": 15,
              "local": 79
            }
          }
        ]
      },
      "recommendations": [
        "2 storage mode(s) failed tests. Review the detailed reports to identify and fix issues.",
        "Significant performance differences detected between storage modes. Consider optimizing slower implementations."
      ]
    }

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:351:17)

  console.log
    
    ≡ƒÄë Test suite completed!

      at AutomatedTestSuite.log (src/services/storage/validation/AutomatedTestSuite.ts:167:13)

  console.log
    Initializing storage mode: cloud

      at log (src/providers/DemoModeGlobal.ts:62:13)

  console.log
    Storage mode initialized successfully: cloud

      at log (src/providers/DemoModeGlobal.ts:65:13)

  console.log
    Initializing storage mode: cloud

      at log (src/providers/DemoModeGlobal.ts:62:13)

  console.log
    Storage mode initialized successfully: cloud

      at log (src/providers/DemoModeGlobal.ts:65:13)

  console.log
    Initializing storage mode: cloud

      at log (src/providers/DemoModeGlobal.ts:62:13)

  console.log
    Storage mode initialized successfully: cloud

      at log (src/providers/DemoModeGlobal.ts:65:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 7,
      nonCompliantInterfaces: 1
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 0,
      nonCompliantInterfaces: 8
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 7,
      nonCompliantInterfaces: 1
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 6,
      nonCompliantInterfaces: 2
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 6,
      nonCompliantInterfaces: 2
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 7,
      nonCompliantInterfaces: 1
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 7,
      nonCompliantInterfaces: 1
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 7,
      nonCompliantInterfaces: 1
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for local mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for local: {
      totalInterfaces: 8,
      compliantInterfaces: 0,
      nonCompliantInterfaces: 8
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 7,
      nonCompliantInterfaces: 1
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 0,
      nonCompliantInterfaces: 8
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 7,
      nonCompliantInterfaces: 1
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for local mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for local: {
      totalInterfaces: 8,
      compliantInterfaces: 0,
      nonCompliantInterfaces: 8
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 7,
      nonCompliantInterfaces: 1
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 7,
      nonCompliantInterfaces: 1
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 7,
      nonCompliantInterfaces: 1
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 6,
      nonCompliantInterfaces: 2
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 6,
      nonCompliantInterfaces: 2
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Testing interface compliance for demo mode...

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:83:13)

  console.log
    Interface compliance test completed for demo: {
      totalInterfaces: 8,
      compliantInterfaces: 7,
      nonCompliantInterfaces: 1
    }

      at InterfaceComplianceTests.log (src/services/storage/validation/InterfaceComplianceTests.ts:119:13)

  console.log
    Initializing storage mode: cloud

      at log (src/providers/DemoModeGlobal.ts:62:13)

  console.log
    Storage mode initialized successfully: cloud

      at log (src/providers/DemoModeGlobal.ts:65:13)

  console.log
    Initializing storage mode: cloud

      at log (src/providers/DemoModeGlobal.ts:62:13)

  console.log
    Storage mode initialized successfully: cloud

      at log (src/providers/DemoModeGlobal.ts:65:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 27, failed: 2, skipped: 15 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 20, failed: 15, skipped: 9 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 27, failed: 2, skipped: 15 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 27, failed: 2, skipped: 15 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 27, failed: 2, skipped: 15 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 27, failed: 2, skipped: 15 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 27, failed: 2, skipped: 15 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Starting validation for local storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for local mode: { totalTests: 44, passed: 27, failed: 2, skipped: 15 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 20, failed: 15, skipped: 9 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 20, failed: 15, skipped: 9 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 26, failed: 5, skipped: 13 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 27, failed: 2, skipped: 15 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 27, failed: 2, skipped: 15 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 27, failed: 2, skipped: 15 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.log
    Starting validation for demo storage mode...

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:88:13)

  console.log
    Validation completed for demo mode: { totalTests: 44, passed: 27, failed: 2, skipped: 15 }

      at StorageValidation.log (src/services/storage/validation/StorageValidation.ts:112:13)

  console.info
    [INFO] 2025-08-14T23:07:33.197Z - Operation 'testOperation' recovered after 2 attempts

      at ErrorLogger.info [as reportToConsole] (src/services/storage/errors/ErrorLogger.ts:395:17)

  console.info
    [INFO] 2025-08-14T23:07:33.202Z - Fallback successful for operation 'testOperation'

      at ErrorLogger.info [as reportToConsole] (src/services/storage/errors/ErrorLogger.ts:395:17)

  console.log
    Initializing storage mode: cloud

      at log (src/providers/DemoModeGlobal.ts:62:13)

  console.log
    Storage mode initialized successfully: cloud

      at log (src/providers/DemoModeGlobal.ts:65:13)

  console.log
    Initializing storage mode: cloud

      at log (src/providers/DemoModeGlobal.ts:62:13)

  console.log
    Storage mode initialized successfully: cloud

      at log (src/providers/DemoModeGlobal.ts:65:13)

  console.log
    Initializing storage mode: cloud

      at log (src/providers/DemoModeGlobal.ts:62:13)

  console.log
    Storage mode initialized successfully: cloud

      at log (src/providers/DemoModeGlobal.ts:65:13)

