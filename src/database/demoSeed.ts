import { Database } from "@nozbe/watermelondb";
import { getWatermelonDB } from "./index";
import TransactionGroup from "./models/TransactionGroup";
import TransactionCategory from "./models/TransactionCategory";
import AccountCategory from "./models/AccountCategory";
import Account from "./models/Account";
import Transaction from "./models/Transaction";
import Recurring from "./models/Recurring";
import Configuration from "./models/Configuration";
import { TableNames } from "../types/db/TableNames";
import { ConfigurationTypes } from "../types/db/Config.Types";
import { Data } from "victory-native";

// Demo mode constants
export const DEMO_TENANT_ID = "demo-tenant-12345";
export const DEMO_USER_ID = "demo-user-12345";

// Demo mode logging utilities
const logDemoAction = (action: string, details?: string) => {
  const timestamp = new Date().toISOString();
  console.log(`[DEMO MODE ${timestamp}] ${action}${details ? `: ${details}` : ''}`);
};

const logDemoError = (action: string, error: any) => {
  const timestamp = new Date().toISOString();
  console.error(`[DEMO MODE ERROR ${timestamp}] ${action}:`, error);
};

// Data isolation validation utilities
const validateTenantIsolation = (records: any[], expectedTenantId: string, operation: string) => {
  const invalidRecords = records.filter(record => record.tenantid !== expectedTenantId);
  if (invalidRecords.length > 0) {
    const error = new Error(
      `Data isolation violation during ${operation}: Found ${invalidRecords.length} records with incorrect tenant ID. ` +
      `Expected: ${expectedTenantId}, Found: ${invalidRecords.map(r => r.tenantid).join(', ')}`
    );
    logDemoError(`Data isolation violation in ${operation}`, error);
    throw error;
  }
};

const validateDemoDataIntegrity = async (database: Database): Promise<void> => {
  logDemoAction('Validating demo data integrity');
  
  try {
    // Check that demo data exists and is properly isolated
    const tables = [
      { model: TransactionGroup, name: 'TransactionGroups' },
      { model: TransactionCategory, name: 'TransactionCategories' },
      { model: AccountCategory, name: 'AccountCategories' },
      { model: Account, name: 'Accounts' },
      { model: Transaction, name: 'Transactions' },
      { model: Recurring, name: 'Recurring' },
      { model: Configuration, name: 'Configurations' }
    ];

    for (const table of tables) {
      const demoRecords = await database
        .get(table.model.table)
        .query()
        .where("tenantid", DEMO_TENANT_ID)
        .fetch();
      
      validateTenantIsolation(demoRecords, DEMO_TENANT_ID, `${table.name} validation`);
      logDemoAction(`Validated ${table.name}`, `${demoRecords.length} demo records found`);
    }
    
    logDemoAction('Demo data integrity validation completed successfully');
  } catch (error) {
    logDemoError('Demo data integrity validation failed', error);
    throw error;
  }
};

const validateNonDemoDataPreservation = async (database: Database): Promise<void> => {
  logDemoAction('Validating non-demo data preservation');
  
  try {
    const tables = [
      { model: TransactionGroup, name: 'TransactionGroups' },
      { model: TransactionCategory, name: 'TransactionCategories' },
      { model: AccountCategory, name: 'AccountCategories' },
      { model: Account, name: 'Accounts' },
      { model: Transaction, name: 'Transactions' },
      { model: Recurring, name: 'Recurring' },
      { model: Configuration, name: 'Configurations' }
    ];

    let totalNonDemoRecords = 0;
    
    for (const table of tables) {
      const nonDemoRecords = await database
        .get(table.model.table)
        .query()
        .where("tenantid", "!=", DEMO_TENANT_ID)
        .fetch();
      
      totalNonDemoRecords += nonDemoRecords.length;
      logDemoAction(`Preserved ${table.name}`, `${nonDemoRecords.length} non-demo records`);
    }
    
    logDemoAction('Non-demo data preservation validated', `${totalNonDemoRecords} total non-demo records preserved`);
  } catch (error) {
    logDemoError('Non-demo data preservation validation failed', error);
    throw error;
  }
};

// Demo Transaction Groups Data
const demoTransactionGroupsData = [
  {
    id: "demo-group-entertainment",
    description: null,
    icon: "Drama",
    color: "error-100",
    name: "Entertainment",
    type: "Expense",
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    displayorder: 1000,
    budgetamount: 300,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-group-bills",
    description: null,
    icon: "Plug",
    color: "error-100",
    name: "Bills",
    type: "Expense",
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    displayorder: 2000,
    budgetamount: 1800,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-group-household",
    description: null,
    icon: "House",
    color: "error-100",
    name: "Household",
    type: "Expense",
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    displayorder: 3000,
    budgetamount: 400,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-group-employer",
    description: null,
    icon: "BriefcaseBusiness",
    color: "error-100",
    name: "Employer",
    type: "Income",
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    displayorder: 4000,
    budgetamount: 5000,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-group-other",
    description: null,
    icon: "Ellipsis",
    color: "error-100",
    name: "Other",
    type: "Expense",
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    displayorder: 5000,
    budgetamount: 200,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-group-accounts",
    description: null,
    icon: "UserPen",
    color: "error-100",
    name: "Accounts",
    type: "Adjustment",
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    displayorder: 6000,
    budgetamount: 0,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-group-car",
    description: null,
    icon: "Car",
    color: "error-100",
    name: "Car",
    type: "Expense",
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    displayorder: 7000,
    budgetamount: 600,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-group-groceries",
    description: null,
    icon: "ShoppingCart",
    color: "error-100",
    name: "Groceries",
    type: "Expense",
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    displayorder: 8000,
    budgetamount: 500,
    budgetfrequency: "monthly",
  },
];

// Demo Transaction Categories Data
const demoTransactionCategoriesData = [
  // Entertainment categories
  {
    id: "demo-cat-dining-out",
    name: "Dining Out",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "Pizza",
    type: "Expense",
    color: "Drama",
    groupid: "demo-group-entertainment",
    displayorder: 1000,
    budgetamount: 150,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-cat-games",
    name: "Games",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "Gamepad2",
    type: "Expense",
    color: "Drama",
    groupid: "demo-group-entertainment",
    displayorder: 2000,
    budgetamount: 50,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-cat-movies",
    name: "Movies & Shows",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "Film",
    type: "Expense",
    color: "Drama",
    groupid: "demo-group-entertainment",
    displayorder: 3000,
    budgetamount: 100,
    budgetfrequency: "monthly",
  },
  // Bills categories
  {
    id: "demo-cat-rent",
    name: "Rent",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "House",
    type: "Expense",
    color: "Plug",
    groupid: "demo-group-bills",
    displayorder: 1000,
    budgetamount: 1200,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-cat-electricity",
    name: "Electricity",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "PlugZap",
    type: "Expense",
    color: "Plug",
    groupid: "demo-group-bills",
    displayorder: 2000,
    budgetamount: 120,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-cat-water",
    name: "Water",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "Droplets",
    type: "Expense",
    color: "Plug",
    groupid: "demo-group-bills",
    displayorder: 3000,
    budgetamount: 80,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-cat-phone",
    name: "Phone",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "Smartphone",
    type: "Expense",
    color: "Plug",
    groupid: "demo-group-bills",
    displayorder: 4000,
    budgetamount: 85,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-cat-internet",
    name: "Internet",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "Wifi",
    type: "Expense",
    color: "Plug",
    groupid: "demo-group-bills",
    displayorder: 5000,
    budgetamount: 75,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-cat-insurance",
    name: "Health Insurance",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "BriefcaseMedical",
    type: "Expense",
    color: "Plug",
    groupid: "demo-group-bills",
    displayorder: 6000,
    budgetamount: 240,
    budgetfrequency: "monthly",
  },
  // Household categories
  {
    id: "demo-cat-clothing",
    name: "Clothing",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "Shirt",
    type: "Expense",
    color: "House",
    groupid: "demo-group-household",
    displayorder: 1000,
    budgetamount: 100,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-cat-medicine",
    name: "Medicine",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "HeartPulse",
    type: "Expense",
    color: "House",
    groupid: "demo-group-household",
    displayorder: 2000,
    budgetamount: 50,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-cat-home-improvement",
    name: "Home Improvement",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "HousePlus",
    type: "Expense",
    color: "House",
    groupid: "demo-group-household",
    displayorder: 3000,
    budgetamount: 150,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-cat-personal-care",
    name: "Personal Care",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "Scissors",
    type: "Expense",
    color: "House",
    groupid: "demo-group-household",
    displayorder: 4000,
    budgetamount: 100,
    budgetfrequency: "monthly",
  },
  // Employer categories
  {
    id: "demo-cat-salary",
    name: "Salary",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "BriefcaseBusiness",
    type: "Income",
    color: "BriefcaseBusiness",
    groupid: "demo-group-employer",
    displayorder: 1000,
    budgetamount: 4500,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-cat-bonus",
    name: "Bonus",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "Star",
    type: "Income",
    color: "BriefcaseBusiness",
    groupid: "demo-group-employer",
    displayorder: 2000,
    budgetamount: 500,
    budgetfrequency: "quarterly",
  },
  // Other categories
  {
    id: "demo-cat-other",
    name: "Other",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "Ellipsis",
    type: "Expense",
    color: "Ellipsis",
    groupid: "demo-group-other",
    displayorder: 1000,
    budgetamount: 200,
    budgetfrequency: "monthly",
  },
  // Accounts categories
  {
    id: "demo-cat-account-operations",
    name: "Account Operations",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "Wallet",
    type: "Adjustment",
    color: "UserPen",
    groupid: "demo-group-accounts",
    displayorder: 1000,
    budgetamount: 0,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-cat-refund",
    name: "Refund",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "TicketSlash",
    type: "Adjustment",
    color: "UserPen",
    groupid: "demo-group-accounts",
    displayorder: 2000,
    budgetamount: 0,
    budgetfrequency: "monthly",
  },
  // Car categories
  {
    id: "demo-cat-fuel",
    name: "Fuel",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "Fuel",
    type: "Expense",
    color: "Car",
    groupid: "demo-group-car",
    displayorder: 1000,
    budgetamount: 200,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-cat-car-insurance",
    name: "Car Insurance",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "Shield",
    type: "Expense",
    color: "Car",
    groupid: "demo-group-car",
    displayorder: 2000,
    budgetamount: 150,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-cat-car-maintenance",
    name: "Car Maintenance",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "Wrench",
    type: "Expense",
    color: "Car",
    groupid: "demo-group-car",
    displayorder: 3000,
    budgetamount: 100,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-cat-car-payment",
    name: "Car Payment",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "Car",
    type: "Expense",
    color: "Car",
    groupid: "demo-group-car",
    displayorder: 4000,
    budgetamount: 150,
    budgetfrequency: "monthly",
  },
  // Groceries categories
  {
    id: "demo-cat-groceries",
    name: "Groceries",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "ShoppingCart",
    type: "Expense",
    color: "ShoppingCart",
    groupid: "demo-group-groceries",
    displayorder: 1000,
    budgetamount: 350,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-cat-fruit",
    name: "Fruit",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "Apple",
    type: "Expense",
    color: "ShoppingCart",
    groupid: "demo-group-groceries",
    displayorder: 2000,
    budgetamount: 75,
    budgetfrequency: "monthly",
  },
  {
    id: "demo-cat-snacks",
    name: "Snacks",
    description: null,
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "Donut",
    type: "Expense",
    color: "ShoppingCart",
    groupid: "demo-group-groceries",
    displayorder: 3000,
    budgetamount: 75,
    budgetfrequency: "monthly",
  },
];

// Demo Account Categories Data
const demoAccountCategoriesData = [
  {
    id: "demo-acc-cat-bank",
    name: "Bank",
    type: "Asset",
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "PiggyBank",
    displayorder: 1000,
    color: "error-100",
  },
  {
    id: "demo-acc-cat-debit-card",
    name: "Debit Card",
    type: "Asset",
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "Banknote",
    displayorder: 2000,
    color: "error-100",
  },
  {
    id: "demo-acc-cat-credit-card",
    name: "Credit Card",
    type: "Liability",
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "CreditCard",
    displayorder: 3000,
    color: "error-100",
  },
  {
    id: "demo-acc-cat-cash",
    name: "Cash",
    type: "Asset",
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "Banknote",
    displayorder: 4000,
    color: "error-100",
  },
  {
    id: "demo-acc-cat-gift-card",
    name: "Gift Card",
    type: "Asset",
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "WalletCards",
    displayorder: 5000,
    color: "error-100",
  },
  {
    id: "demo-acc-cat-loan",
    name: "Loan",
    type: "Liability",
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
    icon: "Landmark",
    displayorder: 6000,
    color: "error-100",
  },
];

// Demo Accounts Data
const demoAccountsData = [
  {
    id: "demo-account-checking",
    name: "Primary Checking Account",
    categoryid: "demo-acc-cat-bank",
    balance: 2500.00, // Will be calculated from transaction history
    currency: "USD",
    color: "error-100",
    icon: "PiggyBank",
    description: "Main checking account for daily expenses",
    notes: null,
    owner: "Demo User",
    displayorder: 1000,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
  },
  {
    id: "demo-account-savings",
    name: "Savings Account",
    categoryid: "demo-acc-cat-bank",
    balance: 8000.00, // Will be calculated from transaction history
    currency: "USD",
    color: "error-100",
    icon: "PiggyBank",
    description: "Emergency fund and savings",
    notes: null,
    owner: "Demo User",
    displayorder: 2000,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
  },
  {
    id: "demo-account-credit-card",
    name: "Credit Card",
    categoryid: "demo-acc-cat-credit-card",
    balance: -1200.00, // Will be calculated from transaction history
    currency: "USD",
    color: "error-100",
    icon: "CreditCard",
    description: "Main credit card for purchases",
    notes: null,
    owner: "Demo User",
    displayorder: 3000,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
  },
  {
    id: "demo-account-cash",
    name: "Cash Account",
    categoryid: "demo-acc-cat-cash",
    balance: 150.00, // Will be calculated from transaction history
    currency: "USD",
    color: "error-100",
    icon: "Banknote",
    description: "Physical cash on hand",
    notes: null,
    owner: "Demo User",
    displayorder: 4000,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
  },
  {
    id: "demo-account-car-loan",
    name: "Car Loan",
    categoryid: "demo-acc-cat-loan",
    balance: -15000.00,
    currency: "USD",
    color: "error-100",
    icon: "Car",
    description: "Auto loan for vehicle purchase",
    notes: null,
    owner: "Demo User",
    displayorder: 5000,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
  },
];

// Demo Transactions Data - 6 months of realistic transaction history
const demoTransactionsData = [
  // Initial account opening transactions (February 2025)
  {
    id: "demo-txn-initial-checking",
    name: "Account Opening",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-account-operations",
    amount: 2000.00,
    date: "2025-02-01",
    description: "Initial deposit for checking account",
    payee: "Demo Bank",
    notes: null,
    tags: null,
    type: "Initial",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-02-01T10:00:00.000Z"),
    updatedat: new Date("2025-02-01T10:00:00.000Z"),
  },
  {
    id: "demo-txn-initial-savings",
    name: "Account Opening",
    accountid: "demo-account-savings",
    categoryid: "demo-cat-account-operations",
    amount: 7500.00,
    date: "2025-02-01",
    description: "Initial deposit for savings account",
    payee: "Demo Bank",
    notes: null,
    tags: null,
    type: "Initial",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-02-01T10:00:00.000Z"),
    updatedat: new Date("2025-02-01T10:00:00.000Z"),
  },
  {
    id: "demo-txn-initial-cash",
    name: "Account Opening",
    accountid: "demo-account-cash",
    categoryid: "demo-cat-account-operations",
    amount: 200.00,
    date: "2025-02-01",
    description: "Initial cash on hand",
    payee: null,
    notes: null,
    tags: null,
    type: "Initial",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-02-01T10:00:00.000Z"),
    updatedat: new Date("2025-02-01T10:00:00.000Z"),
  },
  {
    id: "demo-txn-initial-car-loan",
    name: "Car Loan",
    accountid: "demo-account-car-loan",
    categoryid: "demo-cat-account-operations",
    amount: -15000.00,
    date: "2025-02-01",
    description: "Initial car loan balance",
    payee: "Auto Finance Co",
    notes: null,
    tags: null,
    type: "Initial",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-02-01T10:00:00.000Z"),
    updatedat: new Date("2025-02-01T10:00:00.000Z"),
  },

  // February 2025 transactions
  {
    id: "demo-txn-salary-feb",
    name: "Monthly Salary",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-salary",
    amount: 4500.00,
    date: "2025-02-15",
    description: "February salary deposit",
    payee: "Demo Company Inc",
    notes: null,
    tags: null,
    type: "Income",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-02-15T10:00:00.000Z"),
    updatedat: new Date("2025-02-15T10:00:00.000Z"),
  },
  {
    id: "demo-txn-rent-feb",
    name: "Monthly Rent",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-rent",
    amount: -1200.00,
    date: "2025-02-01",
    description: "February rent payment",
    payee: "Property Management Co",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-02-01T12:00:00.000Z"),
    updatedat: new Date("2025-02-01T12:00:00.000Z"),
  },
  {
    id: "demo-txn-electricity-feb",
    name: "Electricity Bill",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-electricity",
    amount: -125.50,
    date: "2025-02-05",
    description: "February electricity bill",
    payee: "City Electric",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-02-05T14:00:00.000Z"),
    updatedat: new Date("2025-02-05T14:00:00.000Z"),
  },
  {
    id: "demo-txn-groceries-feb-1",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -87.45,
    date: "2025-02-03",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-02-03T16:30:00.000Z"),
    updatedat: new Date("2025-02-03T16:30:00.000Z"),
  },
  {
    id: "demo-txn-fuel-feb-1",
    name: "Gas Station",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-fuel",
    amount: -45.20,
    date: "2025-02-04",
    description: "Fill up gas tank",
    payee: "Shell Station",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-02-04T18:15:00.000Z"),
    updatedat: new Date("2025-02-04T18:15:00.000Z"),
  },

  // March 2025 transactions
  {
    id: "demo-txn-salary-mar",
    name: "Monthly Salary",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-salary",
    amount: 4500.00,
    date: "2025-03-15",
    description: "March salary deposit",
    payee: "Demo Company Inc",
    notes: null,
    tags: null,
    type: "Income",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-03-15T10:00:00.000Z"),
    updatedat: new Date("2025-03-15T10:00:00.000Z"),
  },
  {
    id: "demo-txn-bonus-mar",
    name: "Quarterly Bonus",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-bonus",
    amount: 1500.00,
    date: "2025-03-31",
    description: "Q1 performance bonus",
    payee: "Demo Company Inc",
    notes: null,
    tags: null,
    type: "Income",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-03-31T10:00:00.000Z"),
    updatedat: new Date("2025-03-31T10:00:00.000Z"),
  },
  {
    id: "demo-txn-rent-mar",
    name: "Monthly Rent",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-rent",
    amount: -1200.00,
    date: "2025-03-01",
    description: "March rent payment",
    payee: "Property Management Co",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-03-01T12:00:00.000Z"),
    updatedat: new Date("2025-03-01T12:00:00.000Z"),
  },
  {
    id: "demo-txn-car-payment-mar",
    name: "Car Payment",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-car-payment",
    amount: -350.00,
    date: "2025-03-05",
    description: "Monthly car loan payment",
    payee: "Auto Finance Co",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-03-05T11:00:00.000Z"),
    updatedat: new Date("2025-03-05T11:00:00.000Z"),
  },
  {
    id: "demo-txn-dining-mar-1",
    name: "Restaurant Dinner",
    accountid: "demo-account-credit-card",
    categoryid: "demo-cat-dining-out",
    amount: -65.30,
    date: "2025-03-08",
    description: "Dinner at Italian restaurant",
    payee: "Bella Vista Restaurant",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-03-08T19:30:00.000Z"),
    updatedat: new Date("2025-03-08T19:30:00.000Z"),
  },
  {
    id: "demo-txn-groceries-mar-1",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -92.15,
    date: "2025-03-10",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-03-10T16:30:00.000Z"),
    updatedat: new Date("2025-03-10T16:30:00.000Z"),
  },

  // April 2025 transactions
  {
    id: "demo-txn-salary-apr",
    name: "Monthly Salary",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-salary",
    amount: 4500.00,
    date: "2025-04-15",
    description: "April salary deposit",
    payee: "Demo Company Inc",
    notes: null,
    tags: null,
    type: "Income",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-04-15T10:00:00.000Z"),
    updatedat: new Date("2025-04-15T10:00:00.000Z"),
  },
  {
    id: "demo-txn-rent-apr",
    name: "Monthly Rent",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-rent",
    amount: -1200.00,
    date: "2025-04-01",
    description: "April rent payment",
    payee: "Property Management Co",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-04-01T12:00:00.000Z"),
    updatedat: new Date("2025-04-01T12:00:00.000Z"),
  },
  {
    id: "demo-txn-phone-apr",
    name: "Phone Bill",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-phone",
    amount: -85.00,
    date: "2025-04-10",
    description: "Monthly phone bill",
    payee: "Mobile Carrier",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-04-10T14:00:00.000Z"),
    updatedat: new Date("2025-04-10T14:00:00.000Z"),
  },
  {
    id: "demo-txn-internet-apr",
    name: "Internet Bill",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-internet",
    amount: -75.00,
    date: "2025-04-12",
    description: "Monthly internet service",
    payee: "ISP Provider",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-04-12T14:00:00.000Z"),
    updatedat: new Date("2025-04-12T14:00:00.000Z"),
  },
  {
    id: "demo-txn-clothing-apr",
    name: "Spring Clothes",
    accountid: "demo-account-credit-card",
    categoryid: "demo-cat-clothing",
    amount: -125.99,
    date: "2025-04-20",
    description: "Spring clothing shopping",
    payee: "Fashion Store",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-04-20T15:30:00.000Z"),
    updatedat: new Date("2025-04-20T15:30:00.000Z"),
  },

  // May 2025 transactions
  {
    id: "demo-txn-salary-may",
    name: "Monthly Salary",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-salary",
    amount: 4500.00,
    date: "2025-05-15",
    description: "May salary deposit",
    payee: "Demo Company Inc",
    notes: null,
    tags: null,
    type: "Income",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-05-15T10:00:00.000Z"),
    updatedat: new Date("2025-05-15T10:00:00.000Z"),
  },
  {
    id: "demo-txn-rent-may",
    name: "Monthly Rent",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-rent",
    amount: -1200.00,
    date: "2025-05-01",
    description: "May rent payment",
    payee: "Property Management Co",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-05-01T12:00:00.000Z"),
    updatedat: new Date("2025-05-01T12:00:00.000Z"),
  },
  {
    id: "demo-txn-car-maintenance-may",
    name: "Oil Change",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-car-maintenance",
    amount: -89.99,
    date: "2025-05-18",
    description: "Regular oil change service",
    payee: "Quick Lube",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-05-18T11:30:00.000Z"),
    updatedat: new Date("2025-05-18T11:30:00.000Z"),
  },
  {
    id: "demo-txn-movies-may",
    name: "Movie Night",
    accountid: "demo-account-cash",
    categoryid: "demo-cat-movies",
    amount: -25.00,
    date: "2025-05-25",
    description: "Movie tickets and snacks",
    payee: "Cinema Complex",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-05-25T19:00:00.000Z"),
    updatedat: new Date("2025-05-25T19:00:00.000Z"),
  },

  // June 2025 transactions
  {
    id: "demo-txn-salary-jun",
    name: "Monthly Salary",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-salary",
    amount: 4500.00,
    date: "2025-06-15",
    description: "June salary deposit",
    payee: "Demo Company Inc",
    notes: null,
    tags: null,
    type: "Income",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-06-15T10:00:00.000Z"),
    updatedat: new Date("2025-06-15T10:00:00.000Z"),
  },
  {
    id: "demo-txn-bonus-jun",
    name: "Quarterly Bonus",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-bonus",
    amount: 1200.00,
    date: "2025-06-30",
    description: "Q2 performance bonus",
    payee: "Demo Company Inc",
    notes: null,
    tags: null,
    type: "Income",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-06-30T10:00:00.000Z"),
    updatedat: new Date("2025-06-30T10:00:00.000Z"),
  },
  {
    id: "demo-txn-rent-jun",
    name: "Monthly Rent",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-rent",
    amount: -1200.00,
    date: "2025-06-01",
    description: "June rent payment",
    payee: "Property Management Co",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-06-01T12:00:00.000Z"),
    updatedat: new Date("2025-06-01T12:00:00.000Z"),
  },
  {
    id: "demo-txn-home-improvement-jun",
    name: "Garden Supplies",
    accountid: "demo-account-credit-card",
    categoryid: "demo-cat-home-improvement",
    amount: -185.75,
    date: "2025-06-22",
    description: "Summer garden supplies",
    payee: "Home & Garden Center",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-06-22T14:45:00.000Z"),
    updatedat: new Date("2025-06-22T14:45:00.000Z"),
  },

  // July 2025 transactions
  {
    id: "demo-txn-salary-jul",
    name: "Monthly Salary",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-salary",
    amount: 4500.00,
    date: "2025-07-15",
    description: "July salary deposit",
    payee: "Demo Company Inc",
    notes: null,
    tags: null,
    type: "Income",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-07-15T10:00:00.000Z"),
    updatedat: new Date("2025-07-15T10:00:00.000Z"),
  },
  {
    id: "demo-txn-rent-jul",
    name: "Monthly Rent",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-rent",
    amount: -1200.00,
    date: "2025-07-01",
    description: "July rent payment",
    payee: "Property Management Co",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-07-01T12:00:00.000Z"),
    updatedat: new Date("2025-07-01T12:00:00.000Z"),
  },
  {
    id: "demo-txn-insurance-jul",
    name: "Health Insurance",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-insurance",
    amount: -240.00,
    date: "2025-07-05",
    description: "Monthly health insurance premium",
    payee: "Health Insurance Co",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-07-05T13:00:00.000Z"),
    updatedat: new Date("2025-07-05T13:00:00.000Z"),
  },
  {
    id: "demo-txn-games-jul",
    name: "Video Game",
    accountid: "demo-account-credit-card",
    categoryid: "demo-cat-games",
    amount: -59.99,
    date: "2025-07-28",
    description: "New video game purchase",
    payee: "Game Store",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-07-28T16:20:00.000Z"),
    updatedat: new Date("2025-07-28T16:20:00.000Z"),
  },

  // Transfer transactions
  {
    id: "demo-txn-transfer-to-savings-1",
    name: "Transfer to Savings",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-account-operations",
    amount: -500.00,
    date: "2025-03-20",
    description: "Monthly savings transfer",
    payee: null,
    notes: null,
    tags: null,
    type: "Transfer",
    transferaccountid: "demo-account-savings",
    transferid: "demo-txn-transfer-from-checking-1",
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-03-20T10:00:00.000Z"),
    updatedat: new Date("2025-03-20T10:00:00.000Z"),
  },
  {
    id: "demo-txn-transfer-from-checking-1",
    name: "Transfer from Checking",
    accountid: "demo-account-savings",
    categoryid: "demo-cat-account-operations",
    amount: 500.00,
    date: "2025-03-20",
    description: "Monthly savings transfer",
    payee: null,
    notes: null,
    tags: null,
    type: "Transfer",
    transferaccountid: "demo-account-checking",
    transferid: "demo-txn-transfer-to-savings-1",
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-03-20T10:00:00.000Z"),
    updatedat: new Date("2025-03-20T10:00:00.000Z"),
  },

  // Credit card payment
  {
    id: "demo-txn-cc-payment-1",
    name: "Credit Card Payment",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-account-operations",
    amount: -800.00,
    date: "2025-04-25",
    description: "Monthly credit card payment",
    payee: "Credit Card Company",
    notes: null,
    tags: null,
    type: "Transfer",
    transferaccountid: "demo-account-credit-card",
    transferid: "demo-txn-cc-payment-received-1",
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-04-25T10:00:00.000Z"),
    updatedat: new Date("2025-04-25T10:00:00.000Z"),
  },
  {
    id: "demo-txn-cc-payment-received-1",
    name: "Payment Received",
    accountid: "demo-account-credit-card",
    categoryid: "demo-cat-account-operations",
    amount: 800.00,
    date: "2025-04-25",
    description: "Monthly credit card payment",
    payee: null,
    notes: null,
    tags: null,
    type: "Transfer",
    transferaccountid: "demo-account-checking",
    transferid: "demo-txn-cc-payment-1",
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-04-25T10:00:00.000Z"),
    updatedat: new Date("2025-04-25T10:00:00.000Z"),
  },

  // Void transaction example
  {
    id: "demo-txn-void-example",
    name: "Cancelled Purchase",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-other",
    amount: -150.00,
    date: "2025-05-10",
    description: "Purchase that was cancelled",
    payee: "Online Store",
    notes: "Transaction was voided due to order cancellation",
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: true,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-05-10T14:00:00.000Z"),
    updatedat: new Date("2025-05-10T14:00:00.000Z"),
  },

  // Refund transaction example
  {
    id: "demo-txn-refund-example",
    name: "Product Refund",
    accountid: "demo-account-credit-card",
    categoryid: "demo-cat-refund",
    amount: 75.50,
    date: "2025-06-15",
    description: "Refund for returned item",
    payee: "Electronics Store",
    notes: "Returned defective item",
    tags: null,
    type: "Refund",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-06-15T11:30:00.000Z"),
    updatedat: new Date("2025-06-15T11:30:00.000Z"),
  },

  // Additional regular transactions to reach 100+ transactions
  {
    id: "demo-txn-groceries-feb-2",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -95.30,
    date: "2025-02-10",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-02-10T16:30:00.000Z"),
    updatedat: new Date("2025-02-10T16:30:00.000Z"),
  },
  {
    id: "demo-txn-groceries-feb-3",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -78.90,
    date: "2025-02-17",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-02-17T16:30:00.000Z"),
    updatedat: new Date("2025-02-17T16:30:00.000Z"),
  },
  {
    id: "demo-txn-groceries-feb-4",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -102.45,
    date: "2025-02-24",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-02-24T16:30:00.000Z"),
    updatedat: new Date("2025-02-24T16:30:00.000Z"),
  },
  {
    id: "demo-txn-fuel-feb-2",
    name: "Gas Station",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-fuel",
    amount: -52.80,
    date: "2025-02-18",
    description: "Fill up gas tank",
    payee: "Chevron Station",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-02-18T18:15:00.000Z"),
    updatedat: new Date("2025-02-18T18:15:00.000Z"),
  },
  {
    id: "demo-txn-water-feb",
    name: "Water Bill",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-water",
    amount: -82.30,
    date: "2025-02-08",
    description: "February water bill",
    payee: "City Water Dept",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-02-08T14:00:00.000Z"),
    updatedat: new Date("2025-02-08T14:00:00.000Z"),
  },

  // Additional March transactions
  {
    id: "demo-txn-groceries-mar-2",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -88.75,
    date: "2025-03-17",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-03-17T16:30:00.000Z"),
    updatedat: new Date("2025-03-17T16:30:00.000Z"),
  },
  {
    id: "demo-txn-groceries-mar-3",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -96.20,
    date: "2025-03-24",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-03-24T16:30:00.000Z"),
    updatedat: new Date("2025-03-24T16:30:00.000Z"),
  },
  {
    id: "demo-txn-fuel-mar-1",
    name: "Gas Station",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-fuel",
    amount: -48.90,
    date: "2025-03-12",
    description: "Fill up gas tank",
    payee: "Shell Station",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-03-12T18:15:00.000Z"),
    updatedat: new Date("2025-03-12T18:15:00.000Z"),
  },
  {
    id: "demo-txn-fuel-mar-2",
    name: "Gas Station",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-fuel",
    amount: -51.25,
    date: "2025-03-26",
    description: "Fill up gas tank",
    payee: "Exxon Station",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-03-26T18:15:00.000Z"),
    updatedat: new Date("2025-03-26T18:15:00.000Z"),
  },
  {
    id: "demo-txn-electricity-mar",
    name: "Electricity Bill",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-electricity",
    amount: -118.75,
    date: "2025-03-05",
    description: "March electricity bill",
    payee: "City Electric",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-03-05T14:00:00.000Z"),
    updatedat: new Date("2025-03-05T14:00:00.000Z"),
  },
  {
    id: "demo-txn-water-mar",
    name: "Water Bill",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-water",
    amount: -79.50,
    date: "2025-03-08",
    description: "March water bill",
    payee: "City Water Dept",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-03-08T14:00:00.000Z"),
    updatedat: new Date("2025-03-08T14:00:00.000Z"),
  },

  // Additional April transactions
  {
    id: "demo-txn-groceries-apr-1",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -91.40,
    date: "2025-04-07",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-04-07T16:30:00.000Z"),
    updatedat: new Date("2025-04-07T16:30:00.000Z"),
  },
  {
    id: "demo-txn-groceries-apr-2",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -85.60,
    date: "2025-04-14",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-04-14T16:30:00.000Z"),
    updatedat: new Date("2025-04-14T16:30:00.000Z"),
  },
  {
    id: "demo-txn-groceries-apr-3",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -93.80,
    date: "2025-04-21",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-04-21T16:30:00.000Z"),
    updatedat: new Date("2025-04-21T16:30:00.000Z"),
  },
  {
    id: "demo-txn-groceries-apr-4",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -87.95,
    date: "2025-04-28",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-04-28T16:30:00.000Z"),
    updatedat: new Date("2025-04-28T16:30:00.000Z"),
  },
  {
    id: "demo-txn-fuel-apr-1",
    name: "Gas Station",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-fuel",
    amount: -46.75,
    date: "2025-04-09",
    description: "Fill up gas tank",
    payee: "Shell Station",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-04-09T18:15:00.000Z"),
    updatedat: new Date("2025-04-09T18:15:00.000Z"),
  },
  {
    id: "demo-txn-fuel-apr-2",
    name: "Gas Station",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-fuel",
    amount: -49.30,
    date: "2025-04-23",
    description: "Fill up gas tank",
    payee: "Chevron Station",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-04-23T18:15:00.000Z"),
    updatedat: new Date("2025-04-23T18:15:00.000Z"),
  },
  {
    id: "demo-txn-electricity-apr",
    name: "Electricity Bill",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-electricity",
    amount: -122.40,
    date: "2025-04-05",
    description: "April electricity bill",
    payee: "City Electric",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-04-05T14:00:00.000Z"),
    updatedat: new Date("2025-04-05T14:00:00.000Z"),
  },
  {
    id: "demo-txn-water-apr",
    name: "Water Bill",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-water",
    amount: -81.75,
    date: "2025-04-08",
    description: "April water bill",
    payee: "City Water Dept",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-04-08T14:00:00.000Z"),
    updatedat: new Date("2025-04-08T14:00:00.000Z"),
  },
  {
    id: "demo-txn-dining-apr-1",
    name: "Lunch Out",
    accountid: "demo-account-credit-card",
    categoryid: "demo-cat-dining-out",
    amount: -28.50,
    date: "2025-04-15",
    description: "Business lunch",
    payee: "Cafe Downtown",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-04-15T12:30:00.000Z"),
    updatedat: new Date("2025-04-15T12:30:00.000Z"),
  },
  {
    id: "demo-txn-dining-apr-2",
    name: "Weekend Dinner",
    accountid: "demo-account-credit-card",
    categoryid: "demo-cat-dining-out",
    amount: -72.80,
    date: "2025-04-27",
    description: "Weekend dinner with friends",
    payee: "Steakhouse",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-04-27T19:30:00.000Z"),
    updatedat: new Date("2025-04-27T19:30:00.000Z"),
  },

  // Additional May transactions
  {
    id: "demo-txn-groceries-may-1",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -89.25,
    date: "2025-05-05",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-05-05T16:30:00.000Z"),
    updatedat: new Date("2025-05-05T16:30:00.000Z"),
  },
  {
    id: "demo-txn-groceries-may-2",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -94.60,
    date: "2025-05-12",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-05-12T16:30:00.000Z"),
    updatedat: new Date("2025-05-12T16:30:00.000Z"),
  },
  {
    id: "demo-txn-groceries-may-3",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -86.40,
    date: "2025-05-19",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-05-19T16:30:00.000Z"),
    updatedat: new Date("2025-05-19T16:30:00.000Z"),
  },
  {
    id: "demo-txn-groceries-may-4",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -91.75,
    date: "2025-05-26",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-05-26T16:30:00.000Z"),
    updatedat: new Date("2025-05-26T16:30:00.000Z"),
  },
  {
    id: "demo-txn-fuel-may-1",
    name: "Gas Station",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-fuel",
    amount: -52.15,
    date: "2025-05-07",
    description: "Fill up gas tank",
    payee: "Shell Station",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-05-07T18:15:00.000Z"),
    updatedat: new Date("2025-05-07T18:15:00.000Z"),
  },
  {
    id: "demo-txn-fuel-may-2",
    name: "Gas Station",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-fuel",
    amount: -48.90,
    date: "2025-05-21",
    description: "Fill up gas tank",
    payee: "Exxon Station",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-05-21T18:15:00.000Z"),
    updatedat: new Date("2025-05-21T18:15:00.000Z"),
  },
  {
    id: "demo-txn-electricity-may",
    name: "Electricity Bill",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-electricity",
    amount: -115.25,
    date: "2025-05-05",
    description: "May electricity bill",
    payee: "City Electric",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-05-05T14:00:00.000Z"),
    updatedat: new Date("2025-05-05T14:00:00.000Z"),
  },
  {
    id: "demo-txn-water-may",
    name: "Water Bill",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-water",
    amount: -78.90,
    date: "2025-05-08",
    description: "May water bill",
    payee: "City Water Dept",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-05-08T14:00:00.000Z"),
    updatedat: new Date("2025-05-08T14:00:00.000Z"),
  },
  {
    id: "demo-txn-phone-may",
    name: "Phone Bill",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-phone",
    amount: -85.00,
    date: "2025-05-10",
    description: "Monthly phone bill",
    payee: "Mobile Carrier",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-05-10T14:00:00.000Z"),
    updatedat: new Date("2025-05-10T14:00:00.000Z"),
  },
  {
    id: "demo-txn-internet-may",
    name: "Internet Bill",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-internet",
    amount: -75.00,
    date: "2025-05-12",
    description: "Monthly internet service",
    payee: "ISP Provider",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-05-12T14:00:00.000Z"),
    updatedat: new Date("2025-05-12T14:00:00.000Z"),
  },

  // Additional June transactions
  {
    id: "demo-txn-groceries-jun-1",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -92.80,
    date: "2025-06-02",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-06-02T16:30:00.000Z"),
    updatedat: new Date("2025-06-02T16:30:00.000Z"),
  },
  {
    id: "demo-txn-groceries-jun-2",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -88.45,
    date: "2025-06-09",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-06-09T16:30:00.000Z"),
    updatedat: new Date("2025-06-09T16:30:00.000Z"),
  },
  {
    id: "demo-txn-groceries-jun-3",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -95.60,
    date: "2025-06-16",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-06-16T16:30:00.000Z"),
    updatedat: new Date("2025-06-16T16:30:00.000Z"),
  },
  {
    id: "demo-txn-groceries-jun-4",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -87.30,
    date: "2025-06-23",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-06-23T16:30:00.000Z"),
    updatedat: new Date("2025-06-23T16:30:00.000Z"),
  },
  {
    id: "demo-txn-fuel-jun-1",
    name: "Gas Station",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-fuel",
    amount: -50.75,
    date: "2025-06-04",
    description: "Fill up gas tank",
    payee: "Shell Station",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-06-04T18:15:00.000Z"),
    updatedat: new Date("2025-06-04T18:15:00.000Z"),
  },
  {
    id: "demo-txn-fuel-jun-2",
    name: "Gas Station",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-fuel",
    amount: -47.60,
    date: "2025-06-18",
    description: "Fill up gas tank",
    payee: "Chevron Station",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-06-18T18:15:00.000Z"),
    updatedat: new Date("2025-06-18T18:15:00.000Z"),
  },
  {
    id: "demo-txn-electricity-jun",
    name: "Electricity Bill",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-electricity",
    amount: -128.90,
    date: "2025-06-05",
    description: "June electricity bill",
    payee: "City Electric",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-06-05T14:00:00.000Z"),
    updatedat: new Date("2025-06-05T14:00:00.000Z"),
  },
  {
    id: "demo-txn-water-jun",
    name: "Water Bill",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-water",
    amount: -83.45,
    date: "2025-06-08",
    description: "June water bill",
    payee: "City Water Dept",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-06-08T14:00:00.000Z"),
    updatedat: new Date("2025-06-08T14:00:00.000Z"),
  },
  {
    id: "demo-txn-phone-jun",
    name: "Phone Bill",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-phone",
    amount: -85.00,
    date: "2025-06-10",
    description: "Monthly phone bill",
    payee: "Mobile Carrier",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-06-10T14:00:00.000Z"),
    updatedat: new Date("2025-06-10T14:00:00.000Z"),
  },
  {
    id: "demo-txn-internet-jun",
    name: "Internet Bill",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-internet",
    amount: -75.00,
    date: "2025-06-12",
    description: "Monthly internet service",
    payee: "ISP Provider",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-06-12T14:00:00.000Z"),
    updatedat: new Date("2025-06-12T14:00:00.000Z"),
  },

  // Additional July transactions
  {
    id: "demo-txn-groceries-jul-1",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -90.15,
    date: "2025-07-07",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-07-07T16:30:00.000Z"),
    updatedat: new Date("2025-07-07T16:30:00.000Z"),
  },
  {
    id: "demo-txn-groceries-jul-2",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -86.75,
    date: "2025-07-14",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-07-14T16:30:00.000Z"),
    updatedat: new Date("2025-07-14T16:30:00.000Z"),
  },
  {
    id: "demo-txn-groceries-jul-3",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -93.40,
    date: "2025-07-21",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-07-21T16:30:00.000Z"),
    updatedat: new Date("2025-07-21T16:30:00.000Z"),
  },
  {
    id: "demo-txn-groceries-jul-4",
    name: "Weekly Groceries",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -88.90,
    date: "2025-07-28",
    description: "Weekly grocery shopping",
    payee: "SuperMart",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-07-28T16:30:00.000Z"),
    updatedat: new Date("2025-07-28T16:30:00.000Z"),
  },
  {
    id: "demo-txn-fuel-jul-1",
    name: "Gas Station",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-fuel",
    amount: -53.20,
    date: "2025-07-02",
    description: "Fill up gas tank",
    payee: "Shell Station",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-07-02T18:15:00.000Z"),
    updatedat: new Date("2025-07-02T18:15:00.000Z"),
  },
  {
    id: "demo-txn-fuel-jul-2",
    name: "Gas Station",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-fuel",
    amount: -49.85,
    date: "2025-07-16",
    description: "Fill up gas tank",
    payee: "Exxon Station",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-07-16T18:15:00.000Z"),
    updatedat: new Date("2025-07-16T18:15:00.000Z"),
  },
  {
    id: "demo-txn-fuel-jul-3",
    name: "Gas Station",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-fuel",
    amount: -51.40,
    date: "2025-07-30",
    description: "Fill up gas tank",
    payee: "Chevron Station",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-07-30T18:15:00.000Z"),
    updatedat: new Date("2025-07-30T18:15:00.000Z"),
  },
  {
    id: "demo-txn-electricity-jul",
    name: "Electricity Bill",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-electricity",
    amount: -135.60,
    date: "2025-07-05",
    description: "July electricity bill (summer AC usage)",
    payee: "City Electric",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-07-05T14:00:00.000Z"),
    updatedat: new Date("2025-07-05T14:00:00.000Z"),
  },
  {
    id: "demo-txn-water-jul",
    name: "Water Bill",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-water",
    amount: -85.20,
    date: "2025-07-08",
    description: "July water bill",
    payee: "City Water Dept",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-07-08T14:00:00.000Z"),
    updatedat: new Date("2025-07-08T14:00:00.000Z"),
  },
  {
    id: "demo-txn-phone-jul",
    name: "Phone Bill",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-phone",
    amount: -85.00,
    date: "2025-07-10",
    description: "Monthly phone bill",
    payee: "Mobile Carrier",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-07-10T14:00:00.000Z"),
    updatedat: new Date("2025-07-10T14:00:00.000Z"),
  },
  {
    id: "demo-txn-internet-jul",
    name: "Internet Bill",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-internet",
    amount: -75.00,
    date: "2025-07-12",
    description: "Monthly internet service",
    payee: "ISP Provider",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-07-12T14:00:00.000Z"),
    updatedat: new Date("2025-07-12T14:00:00.000Z"),
  },
  {
    id: "demo-txn-car-insurance-jul",
    name: "Car Insurance",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-car-insurance",
    amount: -150.00,
    date: "2025-07-15",
    description: "Monthly car insurance premium",
    payee: "Auto Insurance Co",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-07-15T14:00:00.000Z"),
    updatedat: new Date("2025-07-15T14:00:00.000Z"),
  },
  {
    id: "demo-txn-medicine-jul",
    name: "Pharmacy",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-medicine",
    amount: -45.80,
    date: "2025-07-20",
    description: "Prescription medication",
    payee: "City Pharmacy",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-07-20T15:30:00.000Z"),
    updatedat: new Date("2025-07-20T15:30:00.000Z"),
  },
  {
    id: "demo-txn-personal-care-jul",
    name: "Haircut",
    accountid: "demo-account-cash",
    categoryid: "demo-cat-personal-care",
    amount: -35.00,
    date: "2025-07-25",
    description: "Monthly haircut",
    payee: "Barber Shop",
    notes: null,
    tags: null,
    type: "Expense",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-07-25T11:00:00.000Z"),
    updatedat: new Date("2025-07-25T11:00:00.000Z"),
  },

  // Balance adjustment transactions to match expected account balances
  {
    id: "demo-txn-balance-adj-checking",
    name: "Balance Adjustment",
    accountid: "demo-account-checking",
    categoryid: "demo-cat-account-operations",
    amount: -15050.00, // Adjustment to reach target balance of $2,500
    date: "2025-07-31",
    description: "Balance adjustment to match expected account balance",
    payee: null,
    notes: "Adjustment transaction to ensure demo balance accuracy",
    tags: null,
    type: "Adjustment",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-07-31T23:59:00.000Z"),
    updatedat: new Date("2025-07-31T23:59:00.000Z"),
  },
  {
    id: "demo-txn-balance-adj-credit-card",
    name: "Balance Adjustment",
    accountid: "demo-account-credit-card",
    categoryid: "demo-cat-account-operations",
    amount: -563.47, // Adjustment to reach target balance of -$1,200
    date: "2025-07-31",
    description: "Balance adjustment to match expected account balance",
    payee: null,
    notes: "Adjustment transaction to ensure demo balance accuracy",
    tags: null,
    type: "Adjustment",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-07-31T23:59:00.000Z"),
    updatedat: new Date("2025-07-31T23:59:00.000Z"),
  },
  {
    id: "demo-txn-balance-adj-cash",
    name: "Balance Adjustment",
    accountid: "demo-account-cash",
    categoryid: "demo-cat-account-operations",
    amount: 45.00, // Adjustment to reach target balance of $150
    date: "2025-07-31",
    description: "Balance adjustment to match expected account balance",
    payee: null,
    notes: "Adjustment transaction to ensure demo balance accuracy",
    tags: null,
    type: "Adjustment",
    transferaccountid: null,
    transferid: null,
    isvoid: false,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    createdat: new Date("2025-07-31T23:59:00.000Z"),
    updatedat: new Date("2025-07-31T23:59:00.000Z"),
  },
];

// Demo Recurring Transactions Data
const demoRecurringTransactionsData = [
  // Income recurring transactions
  {
    id: "demo-recurring-salary",
    name: "Monthly Salary",
    sourceaccountid: "demo-account-checking",
    categoryid: "demo-cat-salary",
    amount: 4500.00,
    type: "Income",
    description: "Monthly salary from Demo Company Inc",
    payeename: "Demo Company Inc",
    notes: null,
    currencycode: "USD",
    recurrencerule: "FREQ=MONTHLY;INTERVAL=1;BYMONTHDAY=15",
    nextoccurrencedate: "2025-09-15",
    enddate: null,
    lastexecutedat: "2025-08-15",
    isactive: true,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    intervalmonths: 1,
    autoapplyenabled: true,
    transferaccountid: null,
    isamountflexible: false,
    isdateflexible: false,
    recurringtype: "Income",
    lastautoappliedat: "2025-08-15",
    failedattempts: 0,
    maxfailedattempts: 3,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
  },
  {
    id: "demo-recurring-bonus",
    name: "Quarterly Bonus",
    sourceaccountid: "demo-account-checking",
    categoryid: "demo-cat-bonus",
    amount: 1500.00,
    type: "Income",
    description: "Quarterly performance bonus",
    payeename: "Demo Company Inc",
    notes: "Performance-based bonus payment",
    currencycode: "USD",
    recurrencerule: "FREQ=MONTHLY;INTERVAL=3;BYMONTHDAY=31",
    nextoccurrencedate: "2025-12-31",
    enddate: null,
    lastexecutedat: "2025-06-30",
    isactive: true,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    intervalmonths: 3,
    autoapplyenabled: true,
    transferaccountid: null,
    isamountflexible: true,
    isdateflexible: false,
    recurringtype: "Income",
    lastautoappliedat: "2025-06-30",
    failedattempts: 0,
    maxfailedattempts: 3,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
  },
  // Expense recurring transactions
  {
    id: "demo-recurring-rent",
    name: "Monthly Rent",
    sourceaccountid: "demo-account-checking",
    categoryid: "demo-cat-rent",
    amount: -1200.00,
    type: "Expense",
    description: "Monthly rent payment",
    payeename: "Property Management Co",
    notes: null,
    currencycode: "USD",
    recurrencerule: "FREQ=MONTHLY;INTERVAL=1;BYMONTHDAY=1",
    nextoccurrencedate: "2025-09-01",
    enddate: null,
    lastexecutedat: "2025-08-01",
    isactive: true,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    intervalmonths: 1,
    autoapplyenabled: true,
    transferaccountid: null,
    isamountflexible: false,
    isdateflexible: false,
    recurringtype: "Expense",
    lastautoappliedat: "2025-08-01",
    failedattempts: 0,
    maxfailedattempts: 3,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
  },
  {
    id: "demo-recurring-electricity",
    name: "Electricity Bill",
    sourceaccountid: "demo-account-checking",
    categoryid: "demo-cat-electricity",
    amount: -120.00,
    type: "Expense",
    description: "Monthly electricity bill",
    payeename: "City Electric",
    notes: null,
    currencycode: "USD",
    recurrencerule: "FREQ=MONTHLY;INTERVAL=1;BYMONTHDAY=5",
    nextoccurrencedate: "2025-09-05",
    enddate: null,
    lastexecutedat: "2025-08-05",
    isactive: true,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    intervalmonths: 1,
    autoapplyenabled: true,
    transferaccountid: null,
    isamountflexible: true,
    isdateflexible: false,
    recurringtype: "Expense",
    lastautoappliedat: "2025-08-05",
    failedattempts: 0,
    maxfailedattempts: 3,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
  },
  {
    id: "demo-recurring-water",
    name: "Water Bill",
    sourceaccountid: "demo-account-checking",
    categoryid: "demo-cat-water",
    amount: -80.00,
    type: "Expense",
    description: "Monthly water bill",
    payeename: "City Water Department",
    notes: null,
    currencycode: "USD",
    recurrencerule: "FREQ=MONTHLY;INTERVAL=1;BYMONTHDAY=10",
    nextoccurrencedate: "2025-09-10",
    enddate: null,
    lastexecutedat: "2025-08-10",
    isactive: true,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    intervalmonths: 1,
    autoapplyenabled: true,
    transferaccountid: null,
    isamountflexible: true,
    isdateflexible: false,
    recurringtype: "Expense",
    lastautoappliedat: "2025-08-10",
    failedattempts: 0,
    maxfailedattempts: 3,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
  },
  {
    id: "demo-recurring-phone",
    name: "Phone Bill",
    sourceaccountid: "demo-account-checking",
    categoryid: "demo-cat-phone",
    amount: -85.00,
    type: "Expense",
    description: "Monthly phone bill",
    payeename: "Mobile Carrier",
    notes: null,
    currencycode: "USD",
    recurrencerule: "FREQ=MONTHLY;INTERVAL=1;BYMONTHDAY=20",
    nextoccurrencedate: "2025-09-20",
    enddate: null,
    lastexecutedat: "2025-08-20",
    isactive: true,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    intervalmonths: 1,
    autoapplyenabled: true,
    transferaccountid: null,
    isamountflexible: false,
    isdateflexible: false,
    recurringtype: "Expense",
    lastautoappliedat: "2025-08-20",
    failedattempts: 0,
    maxfailedattempts: 3,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
  },
  {
    id: "demo-recurring-internet",
    name: "Internet Bill",
    sourceaccountid: "demo-account-checking",
    categoryid: "demo-cat-internet",
    amount: -75.00,
    type: "Expense",
    description: "Monthly internet service",
    payeename: "Internet Provider",
    notes: null,
    currencycode: "USD",
    recurrencerule: "FREQ=MONTHLY;INTERVAL=1;BYMONTHDAY=25",
    nextoccurrencedate: "2025-09-25",
    enddate: null,
    lastexecutedat: "2025-08-25",
    isactive: true,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    intervalmonths: 1,
    autoapplyenabled: true,
    transferaccountid: null,
    isamountflexible: false,
    isdateflexible: false,
    recurringtype: "Expense",
    lastautoappliedat: "2025-08-25",
    failedattempts: 0,
    maxfailedattempts: 3,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
  },
  {
    id: "demo-recurring-insurance",
    name: "Health Insurance",
    sourceaccountid: "demo-account-checking",
    categoryid: "demo-cat-insurance",
    amount: -240.00,
    type: "Expense",
    description: "Monthly health insurance premium",
    payeename: "Health Insurance Co",
    notes: null,
    currencycode: "USD",
    recurrencerule: "FREQ=MONTHLY;INTERVAL=1;BYMONTHDAY=1",
    nextoccurrencedate: "2025-09-01",
    enddate: null,
    lastexecutedat: "2025-08-01",
    isactive: true,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    intervalmonths: 1,
    autoapplyenabled: true,
    transferaccountid: null,
    isamountflexible: false,
    isdateflexible: false,
    recurringtype: "Expense",
    lastautoappliedat: "2025-08-01",
    failedattempts: 0,
    maxfailedattempts: 3,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
  },
  {
    id: "demo-recurring-groceries",
    name: "Weekly Groceries",
    sourceaccountid: "demo-account-checking",
    categoryid: "demo-cat-groceries",
    amount: -87.50,
    type: "Expense",
    description: "Weekly grocery budget",
    payeename: "SuperMart",
    notes: "Weekly grocery shopping budget",
    currencycode: "USD",
    recurrencerule: "FREQ=WEEKLY;INTERVAL=1;BYDAY=SA",
    nextoccurrencedate: "2025-09-07",
    enddate: null,
    lastexecutedat: "2025-08-31",
    isactive: true,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    intervalmonths: null,
    autoapplyenabled: false,
    transferaccountid: null,
    isamountflexible: true,
    isdateflexible: true,
    recurringtype: "Expense",
    lastautoappliedat: null,
    failedattempts: 0,
    maxfailedattempts: 3,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
  },
  {
    id: "demo-recurring-car-payment",
    name: "Car Payment",
    sourceaccountid: "demo-account-checking",
    categoryid: "demo-cat-car-payment",
    amount: -350.00,
    type: "Expense",
    description: "Monthly car loan payment",
    payeename: "Auto Finance Co",
    notes: null,
    currencycode: "USD",
    recurrencerule: "FREQ=MONTHLY;INTERVAL=1;BYMONTHDAY=15",
    nextoccurrencedate: "2025-09-15",
    enddate: "2027-02-15",
    lastexecutedat: "2025-08-15",
    isactive: true,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    intervalmonths: 1,
    autoapplyenabled: true,
    transferaccountid: null,
    isamountflexible: false,
    isdateflexible: false,
    recurringtype: "Expense",
    lastautoappliedat: "2025-08-15",
    failedattempts: 0,
    maxfailedattempts: 3,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
  },
  {
    id: "demo-recurring-car-insurance",
    name: "Car Insurance",
    sourceaccountid: "demo-account-checking",
    categoryid: "demo-cat-car-insurance",
    amount: -150.00,
    type: "Expense",
    description: "Monthly car insurance premium",
    payeename: "Auto Insurance Co",
    notes: null,
    currencycode: "USD",
    recurrencerule: "FREQ=MONTHLY;INTERVAL=1;BYMONTHDAY=1",
    nextoccurrencedate: "2025-09-01",
    enddate: null,
    lastexecutedat: "2025-08-01",
    isactive: true,
    tenantid: DEMO_TENANT_ID,
    isdeleted: false,
    createdby: DEMO_USER_ID,
    updatedby: null,
    intervalmonths: 1,
    autoapplyenabled: true,
    transferaccountid: null,
    isamountflexible: false,
    isdateflexible: false,
    recurringtype: "Expense",
    lastautoappliedat: "2025-08-01",
    failedattempts: 0,
    maxfailedattempts: 3,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
  },
];

// Demo Configurations Data
const demoConfigurationsData = [
  {
    id: "demo-config-account-operations",
    tablename: TableNames.TransactionCategories,
    type: ConfigurationTypes.AccountOpertationsCategory,
    key: "id",
    value: "demo-cat-account-operations",
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
  },
  {
    id: "demo-config-other-category",
    tablename: TableNames.TransactionCategories,
    type: "Other",
    key: "id",
    value: "demo-cat-other",
    createdby: DEMO_USER_ID,
    createdat: new Date("2025-08-01T10:00:00.000Z"),
    updatedby: null,
    updatedat: new Date("2025-08-01T10:00:00.000Z"),
    isdeleted: false,
    tenantid: DEMO_TENANT_ID,
  },
];

// Export demo data arrays for use in seeding functions
export {
  demoTransactionGroupsData,
  demoTransactionCategoriesData,
  demoAccountCategoriesData,
  demoAccountsData,
  demoTransactionsData,
  demoRecurringTransactionsData,
  demoConfigurationsData,
};
/**
 *
 Checks if the database has already been seeded with demo data
 */
export const isDemoSeeded = async (database: Database): Promise<boolean> => {
  try {
    const demoTransactionGroups = await database
      .get(TransactionGroup.table)
      .query()
      .where("tenantid", DEMO_TENANT_ID)
      .fetch();
    return demoTransactionGroups.length > 0;
  } catch (error) {
    console.error("Error checking if demo data is seeded:", error);
    return false;
  }
};

/**
 * Seeds the WatermelonDB database with comprehensive demo data
 */
export const seedDemoData = async (database?: Database): Promise<void> => {
  logDemoAction('Demo mode activation started');
  
  try {
    const db = database || (await getWatermelonDB());

    // Check if already seeded
    if (await isDemoSeeded(db)) {
      logDemoAction('Demo data already exists, skipping seeding');
      return;
    }

    logDemoAction('Beginning demo data seeding process');

    await db.write(async () => {
      // Seed Account Categories first (referenced by accounts)
      console.log("Seeding Demo Account Categories...");
      for (const categoryData of demoAccountCategoriesData) {
        await db.get(AccountCategory.table).create(category => {
          const accountCategory = category as AccountCategory;
          accountCategory._raw.id = categoryData.id;
          accountCategory.name = categoryData.name;
          accountCategory.type = categoryData.type;
          accountCategory.color = categoryData.color;
          accountCategory.icon = categoryData.icon;
          accountCategory.displayorder = categoryData.displayorder;
          accountCategory.tenantid = categoryData.tenantid;
          accountCategory.isdeleted = categoryData.isdeleted;
          accountCategory.createdby = categoryData.createdby || undefined;
          accountCategory.updatedby = categoryData.updatedby || undefined;
          accountCategory.createdat = categoryData.createdat;
          accountCategory.updatedat = categoryData.updatedat;
        });
      }

      // Seed Transaction Groups (referenced by transaction categories)
      console.log("Seeding Demo Transaction Groups...");
      for (const groupData of demoTransactionGroupsData) {
        await db.get(TransactionGroup.table).create(group => {
          const transactionGroup = group as TransactionGroup;
          transactionGroup._raw.id = groupData.id;
          transactionGroup.name = groupData.name;
          transactionGroup.type = groupData.type;
          transactionGroup.color = groupData.color;
          transactionGroup.icon = groupData.icon;
          transactionGroup.description = groupData.description || undefined;
          transactionGroup.displayorder = groupData.displayorder;
          transactionGroup.budgetamount = groupData.budgetamount;
          transactionGroup.budgetfrequency = groupData.budgetfrequency;
          transactionGroup.tenantid = groupData.tenantid;
          transactionGroup.isdeleted = groupData.isdeleted;
          transactionGroup.createdby = groupData.createdby || undefined;
          transactionGroup.updatedby = groupData.updatedby || undefined;
          transactionGroup.createdat = groupData.createdat;
          transactionGroup.updatedat = groupData.updatedat;
        });
      }

      // Seed Transaction Categories (referenced by transactions and recurring)
      console.log("Seeding Demo Transaction Categories...");
      for (const categoryData of demoTransactionCategoriesData) {
        await db.get(TransactionCategory.table).create(category => {
          const transactionCategory = category as TransactionCategory;
          transactionCategory._raw.id = categoryData.id;
          transactionCategory.name = categoryData.name || undefined;
          transactionCategory.groupid = categoryData.groupid;
          transactionCategory.type = categoryData.type;
          transactionCategory.color = categoryData.color;
          transactionCategory.icon = categoryData.icon;
          transactionCategory.description = categoryData.description || undefined;
          transactionCategory.displayorder = categoryData.displayorder;
          transactionCategory.budgetamount = categoryData.budgetamount;
          transactionCategory.budgetfrequency = categoryData.budgetfrequency;
          transactionCategory.tenantid = categoryData.tenantid;
          transactionCategory.isdeleted = categoryData.isdeleted;
          transactionCategory.createdby = categoryData.createdby || undefined;
          transactionCategory.updatedby = categoryData.updatedby || undefined;
          transactionCategory.createdat = categoryData.createdat;
          transactionCategory.updatedat = categoryData.updatedat;
        });
      }

      // Seed Accounts (referenced by transactions and recurring)
      console.log("Seeding Demo Accounts...");
      for (const accountData of demoAccountsData) {
        await db.get(Account.table).create(account => {
          const demoAccount = account as Account;
          demoAccount._raw.id = accountData.id;
          demoAccount.name = accountData.name;
          demoAccount.categoryid = accountData.categoryid;
          demoAccount.balance = accountData.balance;
          demoAccount.currency = accountData.currency;
          demoAccount.color = accountData.color;
          demoAccount.icon = accountData.icon;
          demoAccount.description = accountData.description || undefined;
          demoAccount.notes = accountData.notes || undefined;
          demoAccount.owner = accountData.owner || undefined;
          demoAccount.displayorder = accountData.displayorder;
          demoAccount.tenantid = accountData.tenantid;
          demoAccount.isdeleted = accountData.isdeleted;
          demoAccount.createdby = accountData.createdby || undefined;
          demoAccount.updatedby = accountData.updatedby || undefined;
          demoAccount.createdat = accountData.createdat;
          demoAccount.updatedat = accountData.updatedat;
        });
      }

      // Seed Transactions (after accounts and categories are created)
      console.log("Seeding Demo Transactions...");
      for (const transactionData of demoTransactionsData) {
        await db.get(Transaction.table).create(transaction => {
          const demoTransaction = transaction as Transaction;
          demoTransaction._raw.id = transactionData.id;
          demoTransaction.name = transactionData.name || undefined;
          demoTransaction.accountid = transactionData.accountid;
          demoTransaction.categoryid = transactionData.categoryid;
          demoTransaction.amount = transactionData.amount;
          demoTransaction.date = transactionData.date;
          demoTransaction.description = transactionData.description || undefined;
          demoTransaction.payee = transactionData.payee || undefined;
          demoTransaction.notes = transactionData.notes || undefined;
          demoTransaction.tags = transactionData.tags || undefined;
          demoTransaction.type = transactionData.type;
          demoTransaction.transferaccountid = transactionData.transferaccountid || undefined;
          demoTransaction.transferid = transactionData.transferid || undefined;
          demoTransaction.isvoid = transactionData.isvoid;
          demoTransaction.tenantid = transactionData.tenantid;
          demoTransaction.isdeleted = transactionData.isdeleted;
          demoTransaction.createdby = transactionData.createdby || undefined;
          demoTransaction.updatedby = transactionData.updatedby || undefined;
          demoTransaction.createdat = transactionData.createdat;
          demoTransaction.updatedat = transactionData.updatedat;
        });
      }

      // Seed Recurring Transactions (after accounts and categories are created)
      console.log("Seeding Demo Recurring Transactions...");
      for (const recurringData of demoRecurringTransactionsData) {
        await db.get(Recurring.table).create(recurring => {
          const demoRecurring = recurring as Recurring;
          demoRecurring._raw.id = recurringData.id;
          demoRecurring.name = recurringData.name;
          demoRecurring.sourceaccountid = recurringData.sourceaccountid;
          demoRecurring.categoryid = recurringData.categoryid;
          demoRecurring.amount = recurringData.amount || undefined;
          demoRecurring.type = recurringData.type;
          demoRecurring.description = recurringData.description || undefined;
          demoRecurring.payeename = recurringData.payeename || undefined;
          demoRecurring.notes = recurringData.notes || undefined;
          demoRecurring.currencycode = recurringData.currencycode;
          demoRecurring.recurrencerule = recurringData.recurrencerule;
          demoRecurring.nextoccurrencedate = recurringData.nextoccurrencedate;
          demoRecurring.enddate = recurringData.enddate || undefined;
          demoRecurring.lastexecutedat = recurringData.lastexecutedat || undefined;
          demoRecurring.isactive = recurringData.isactive;
          demoRecurring.tenantid = recurringData.tenantid;
          demoRecurring.isdeleted = recurringData.isdeleted;
          demoRecurring.createdby = recurringData.createdby || undefined;
          demoRecurring.updatedby = recurringData.updatedby || undefined;
          demoRecurring.intervalmonths = recurringData.intervalmonths || undefined;
          demoRecurring.autoapplyenabled = recurringData.autoapplyenabled || undefined;
          demoRecurring.transferaccountid = recurringData.transferaccountid || undefined;
          demoRecurring.isamountflexible = recurringData.isamountflexible || undefined;
          demoRecurring.isdateflexible = recurringData.isdateflexible || undefined;
          demoRecurring.recurringtype = recurringData.recurringtype || undefined;
          demoRecurring.lastautoappliedat = recurringData.lastautoappliedat || undefined;
          demoRecurring.failedattempts = recurringData.failedattempts || undefined;
          demoRecurring.maxfailedattempts = recurringData.maxfailedattempts || undefined;
          demoRecurring.createdat = recurringData.createdat;
          demoRecurring.updatedat = recurringData.updatedat;
        });
      }

      // Seed Configurations
      console.log("Seeding Demo Configurations...");
      for (const configData of demoConfigurationsData) {
        await db.get(Configuration.table).create(config => {
          const configuration = config as Configuration;
          configuration._raw.id = configData.id;
          configuration.key = configData.key;
          configuration.value = configData.value;
          configuration.type = configData.type;
          configuration.tablename = configData.tablename;
          configuration.tenantid = configData.tenantid || undefined;
          configuration.isdeleted = configData.isdeleted;
          configuration.createdby = configData.createdby || undefined;
          configuration.updatedby = configData.updatedby || undefined;
          configuration.createdat = configData.createdat;
          configuration.updatedat = configData.updatedat;
        });
      }
    });

    logDemoAction('Demo data seeding completed successfully');
    
    // Validate demo data integrity and isolation
    await validateDemoDataIntegrity(db);
    
    // Validate that account balances match transaction history
    const balancesValid = await validateDemoBalances(db);
    if (!balancesValid) {
      logDemoAction('Warning: Account balance validation failed', 'Some balances may not match transaction history');
    } else {
      logDemoAction('Account balance validation passed');
    }
    
    logDemoAction('Demo mode activation completed successfully');
  } catch (error) {
    logDemoError('Demo data seeding failed', error);
    throw error;
  }
};

/**
 * Validates that account balances match the sum of their transaction history
 * This ensures transaction balance calculations are accurate
 */
export const validateDemoBalances = async (database?: Database): Promise<boolean> => {
  try {
    const db = database || (await getWatermelonDB());
    
    console.log("Validating demo account balances against transaction history...");
    
    // Get all demo accounts
    const accounts = await db
      .get(Account.table)
      .query()
      .where("tenantid", DEMO_TENANT_ID)
      .fetch();
    
    let allBalancesValid = true;
    
    for (const account of accounts) {
      // Get all transactions for this account (excluding void transactions)
      const transactions = await db
        .get(Transaction.table)
        .query()
        .where("accountid", account.id)
        .where("tenantid", DEMO_TENANT_ID)
        .where("isvoid", false)
        .fetch();
      
      // Calculate expected balance from transaction history
      const calculatedBalance = transactions.reduce((sum, transaction) => {
        return sum + transaction.amount;
      }, 0);
      
      // Round to 2 decimal places for comparison
      const expectedBalance = Math.round(calculatedBalance * 100) / 100;
      const actualBalance = Math.round(account.balance * 100) / 100;
      
      if (Math.abs(expectedBalance - actualBalance) > 0.01) {
        console.error(`Balance mismatch for account ${account.name}:`);
        console.error(`  Expected: $${expectedBalance.toFixed(2)}`);
        console.error(`  Actual: $${actualBalance.toFixed(2)}`);
        console.error(`  Difference: $${(actualBalance - expectedBalance).toFixed(2)}`);
        allBalancesValid = false;
      } else {
        console.log(`✓ Balance validated for ${account.name}: $${actualBalance.toFixed(2)}`);
      }
    }
    
    if (allBalancesValid) {
      console.log("All demo account balances are valid!");
    } else {
      console.error("Some demo account balances do not match transaction history!");
    }
    
    return allBalancesValid;
  } catch (error) {
    console.error("Error validating demo balances:", error);
    return false;
  }
};

/**
 * Safely removes all demo data from the database
 * Only removes data associated with the demo tenant ID
 */
export const clearDemoData = async (database?: Database): Promise<void> => {
  logDemoAction('Demo mode deactivation started');
  
  try {
    const db = database || (await getWatermelonDB());

    // Validate non-demo data preservation before cleanup
    await validateNonDemoDataPreservation(db);

    logDemoAction('Beginning demo data cleanup process');

    await db.write(async () => {
      // Enhanced validation that we're only working with demo tenant data
      const validateDemoTenant = (records: any[], tableName: string) => {
        const nonDemoRecords = records.filter(record => record.tenantid !== DEMO_TENANT_ID);
        if (nonDemoRecords.length > 0) {
          const error = new Error(
            `Data isolation violation in ${tableName}: Attempted to delete non-demo data. ` +
            `Found ${nonDemoRecords.length} records with different tenant IDs. ` +
            `Expected: ${DEMO_TENANT_ID}, Found: ${nonDemoRecords.map(r => r.tenantid).join(', ')}`
          );
          logDemoError(`Data isolation violation in ${tableName}`, error);
          throw error;
        }
        logDemoAction(`Validated ${tableName} for cleanup`, `${records.length} demo records to be removed`);
      };

      // Clear in reverse order of dependencies to avoid foreign key constraints
      
      // Clear Configurations
      logDemoAction('Clearing demo configurations');
      const configurations = await db
        .get(Configuration.table)
        .query()
        .where("tenantid", DEMO_TENANT_ID)
        .fetch();
      validateDemoTenant(configurations, 'Configurations');
      for (const config of configurations) {
        await config.markAsDeleted();
      }

      // Clear Recurring Transactions (if any exist)
      logDemoAction('Clearing demo recurring transactions');
      const recurrings = await db
        .get(Recurring.table)
        .query()
        .where("tenantid", DEMO_TENANT_ID)
        .fetch();
      validateDemoTenant(recurrings, 'Recurring Transactions');
      for (const recurring of recurrings) {
        await recurring.markAsDeleted();
      }

      // Clear Transactions (if any exist)
      logDemoAction('Clearing demo transactions');
      const transactions = await db
        .get(Transaction.table)
        .query()
        .where("tenantid", DEMO_TENANT_ID)
        .fetch();
      validateDemoTenant(transactions, 'Transactions');
      for (const transaction of transactions) {
        await transaction.markAsDeleted();
      }

      // Clear Accounts
      logDemoAction('Clearing demo accounts');
      const accounts = await db
        .get(Account.table)
        .query()
        .where("tenantid", DEMO_TENANT_ID)
        .fetch();
      validateDemoTenant(accounts, 'Accounts');
      for (const account of accounts) {
        await account.markAsDeleted();
      }

      // Clear Transaction Categories
      logDemoAction('Clearing demo transaction categories');
      const transactionCategories = await db
        .get(TransactionCategory.table)
        .query()
        .where("tenantid", DEMO_TENANT_ID)
        .fetch();
      validateDemoTenant(transactionCategories, 'Transaction Categories');
      for (const category of transactionCategories) {
        await category.markAsDeleted();
      }

      // Clear Account Categories
      logDemoAction('Clearing demo account categories');
      const accountCategories = await db
        .get(AccountCategory.table)
        .query()
        .where("tenantid", DEMO_TENANT_ID)
        .fetch();
      validateDemoTenant(accountCategories, 'Account Categories');
      for (const category of accountCategories) {
        await category.markAsDeleted();
      }

      // Clear Transaction Groups
      logDemoAction('Clearing demo transaction groups');
      const transactionGroups = await db
        .get(TransactionGroup.table)
        .query()
        .where("tenantid", DEMO_TENANT_ID)
        .fetch();
      validateDemoTenant(transactionGroups, 'Transaction Groups');
      for (const group of transactionGroups) {
        await group.markAsDeleted();
      }
    });

    // Validate that non-demo data was preserved after cleanup
    await validateNonDemoDataPreservation(db);
    
    logDemoAction('Demo data cleanup completed successfully');
    logDemoAction('Demo mode deactivation completed successfully');
  } catch (error) {
    logDemoError('Demo data cleanup failed', error);
    throw error;
  }
};

// Export default object with all demo functions
export default {
  seedDemoData,
  isDemoSeeded,
  clearDemoData,
  validateDemoBalances,
  validateDemoDataIntegrity,
  validateNonDemoDataPreservation,
  DEMO_TENANT_ID,
  DEMO_USER_ID,
};